var BatchGeneExpression=function(e){"use strict";var t={},n={},r=34,a=10,i=13;function o(e){return new Function("d","return {"+e.map(function(e,t){return JSON.stringify(e)+": d["+t+"]"}).join(",")+"}")}var c=function(e){var c=new RegExp('["'+e+"\n\r]"),f=e.charCodeAt(0);function u(e,o){var c,u=[],s=e.length,d=0,l=0,h=s<=0,b=!1;function p(){if(h)return n;if(b)return b=!1,t;var o,c,u=d;if(e.charCodeAt(u)===r){for(;d++<s&&e.charCodeAt(d)!==r||e.charCodeAt(++d)===r;);return(o=d)>=s?h=!0:(c=e.charCodeAt(d++))===a?b=!0:c===i&&(b=!0,e.charCodeAt(d)===a&&++d),e.slice(u+1,o-1).replace(/""/g,'"')}for(;d<s;){if((c=e.charCodeAt(o=d++))===a)b=!0;else if(c===i)b=!0,e.charCodeAt(d)===a&&++d;else if(c!==f)continue;return e.slice(u,o)}return h=!0,e.slice(u,s)}for(e.charCodeAt(s-1)===a&&--s,e.charCodeAt(s-1)===i&&--s;(c=p())!==n;){for(var g=[];c!==t&&c!==n;)g.push(c),c=p();o&&null==(g=o(g,l++))||u.push(g)}return u}function s(t){return t.map(d).join(e)}function d(e){return null==e?"":c.test(e+="")?'"'+e.replace(/"/g,'""')+'"':e}return{parse:function(e,t){var n,r,a=u(e,function(e,a){if(n)return n(e,a-1);r=e,n=t?function(e,t){var n=o(e);return function(r,a){return t(n(r),a,e)}}(e,t):o(e)});return a.columns=r||[],a},parseRows:u,format:function(t,n){return null==n&&(n=function(e){var t=Object.create(null),n=[];return e.forEach(function(e){for(var r in e)r in t||n.push(t[r]=r)}),n}(t)),[n.map(d).join(e)].concat(t.map(function(t){return n.map(function(e){return d(t[e])}).join(e)})).join("\n")},formatRows:function(e){return e.map(s).join("\n")}}},f=c(",").parse,u=c("\t").parse;function s(e){if(!e.ok)throw new Error(e.status+" "+e.statusText);return e.text()}var d=function(e,t){return fetch(e,t).then(s)};function l(e){return function(t,n,r){return 2===arguments.length&&"function"==typeof n&&(r=n,n=void 0),d(t,n).then(function(t){return e(t,r)})}}l(f);var h=l(u);function b(e){if(!e.ok)throw new Error(e.status+" "+e.statusText);return e.json()}var p=function(e,t){return fetch(e,t).then(b)},g="http://www.w3.org/1999/xhtml",m={svg:"http://www.w3.org/2000/svg",xhtml:g,xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"},v=function(e){var t=e+="",n=t.indexOf(":");return n>=0&&"xmlns"!==(t=e.slice(0,n))&&(e=e.slice(n+1)),m.hasOwnProperty(t)?{space:m[t],local:e}:e};var y=function(e){var t=v(e);return(t.local?function(e){return function(){return this.ownerDocument.createElementNS(e.space,e.local)}}:function(e){return function(){var t=this.ownerDocument,n=this.namespaceURI;return n===g&&t.documentElement.namespaceURI===g?t.createElement(e):t.createElementNS(n,e)}})(t)};function w(){}var x=function(e){return null==e?w:function(){return this.querySelector(e)}};function _(){return[]}var M=function(e){return null==e?_:function(){return this.querySelectorAll(e)}},A=function(e){return function(){return this.matches(e)}};if("undefined"!=typeof document){var T=document.documentElement;if(!T.matches){var S=T.webkitMatchesSelector||T.msMatchesSelector||T.mozMatchesSelector||T.oMatchesSelector;A=function(e){return function(){return S.call(this,e)}}}}var C=A,P=function(e){return new Array(e.length)};function k(e,t){this.ownerDocument=e.ownerDocument,this.namespaceURI=e.namespaceURI,this._next=null,this._parent=e,this.__data__=t}k.prototype={constructor:k,appendChild:function(e){return this._parent.insertBefore(e,this._next)},insertBefore:function(e,t){return this._parent.insertBefore(e,t)},querySelector:function(e){return this._parent.querySelector(e)},querySelectorAll:function(e){return this._parent.querySelectorAll(e)}};var E="$";function N(e,t,n,r,a,i){for(var o,c=0,f=t.length,u=i.length;c<u;++c)(o=t[c])?(o.__data__=i[c],r[c]=o):n[c]=new k(e,i[c]);for(;c<f;++c)(o=t[c])&&(a[c]=o)}function L(e,t,n,r,a,i,o){var c,f,u,s={},d=t.length,l=i.length,h=new Array(d);for(c=0;c<d;++c)(f=t[c])&&(h[c]=u=E+o.call(f,f.__data__,c,t),u in s?a[c]=f:s[u]=f);for(c=0;c<l;++c)(f=s[u=E+o.call(e,i[c],c,i)])?(r[c]=f,f.__data__=i[c],s[u]=null):n[c]=new k(e,i[c]);for(c=0;c<d;++c)(f=t[c])&&s[h[c]]===f&&(a[c]=f)}function D(e,t){return e<t?-1:e>t?1:e>=t?0:NaN}var I=function(e){return e.ownerDocument&&e.ownerDocument.defaultView||e.document&&e||e.defaultView};function B(e,t){return e.style.getPropertyValue(t)||I(e).getComputedStyle(e,null).getPropertyValue(t)}function F(e){return e.trim().split(/^|\s+/)}function U(e){return e.classList||new H(e)}function H(e){this._node=e,this._names=F(e.getAttribute("class")||"")}function R(e,t){for(var n=U(e),r=-1,a=t.length;++r<a;)n.add(t[r])}function O(e,t){for(var n=U(e),r=-1,a=t.length;++r<a;)n.remove(t[r])}H.prototype={add:function(e){this._names.indexOf(e)<0&&(this._names.push(e),this._node.setAttribute("class",this._names.join(" ")))},remove:function(e){var t=this._names.indexOf(e);t>=0&&(this._names.splice(t,1),this._node.setAttribute("class",this._names.join(" ")))},contains:function(e){return this._names.indexOf(e)>=0}};function Y(){this.textContent=""}function j(){this.innerHTML=""}function G(){this.nextSibling&&this.parentNode.appendChild(this)}function V(){this.previousSibling&&this.parentNode.insertBefore(this,this.parentNode.firstChild)}function X(){return null}function q(){var e=this.parentNode;e&&e.removeChild(this)}function z(){return this.parentNode.insertBefore(this.cloneNode(!1),this.nextSibling)}function W(){return this.parentNode.insertBefore(this.cloneNode(!0),this.nextSibling)}var Z={},J=null;"undefined"!=typeof document&&("onmouseenter"in document.documentElement||(Z={mouseenter:"mouseover",mouseleave:"mouseout"}));function Q(e,t,n){return e=K(e,t,n),function(t){var n=t.relatedTarget;n&&(n===this||8&n.compareDocumentPosition(this))||e.call(this,t)}}function K(e,t,n){return function(r){var a=J;J=r;try{e.call(this,this.__data__,t,n)}finally{J=a}}}function ee(e){return function(){var t=this.__on;if(t){for(var n,r=0,a=-1,i=t.length;r<i;++r)n=t[r],e.type&&n.type!==e.type||n.name!==e.name?t[++a]=n:this.removeEventListener(n.type,n.listener,n.capture);++a?t.length=a:delete this.__on}}}function te(e,t,n){var r=Z.hasOwnProperty(e.type)?Q:K;return function(a,i,o){var c,f=this.__on,u=r(t,i,o);if(f)for(var s=0,d=f.length;s<d;++s)if((c=f[s]).type===e.type&&c.name===e.name)return this.removeEventListener(c.type,c.listener,c.capture),this.addEventListener(c.type,c.listener=u,c.capture=n),void(c.value=t);this.addEventListener(e.type,u,n),c={type:e.type,name:e.name,value:t,listener:u,capture:n},f?f.push(c):this.__on=[c]}}function ne(e,t,n){var r=I(e),a=r.CustomEvent;"function"==typeof a?a=new a(t,n):(a=r.document.createEvent("Event"),n?(a.initEvent(t,n.bubbles,n.cancelable),a.detail=n.detail):a.initEvent(t,!1,!1)),e.dispatchEvent(a)}var re=[null];function ae(e,t){this._groups=e,this._parents=t}function ie(){return new ae([[document.documentElement]],re)}ae.prototype=ie.prototype={constructor:ae,select:function(e){"function"!=typeof e&&(e=x(e));for(var t=this._groups,n=t.length,r=new Array(n),a=0;a<n;++a)for(var i,o,c=t[a],f=c.length,u=r[a]=new Array(f),s=0;s<f;++s)(i=c[s])&&(o=e.call(i,i.__data__,s,c))&&("__data__"in i&&(o.__data__=i.__data__),u[s]=o);return new ae(r,this._parents)},selectAll:function(e){"function"!=typeof e&&(e=M(e));for(var t=this._groups,n=t.length,r=[],a=[],i=0;i<n;++i)for(var o,c=t[i],f=c.length,u=0;u<f;++u)(o=c[u])&&(r.push(e.call(o,o.__data__,u,c)),a.push(o));return new ae(r,a)},filter:function(e){"function"!=typeof e&&(e=C(e));for(var t=this._groups,n=t.length,r=new Array(n),a=0;a<n;++a)for(var i,o=t[a],c=o.length,f=r[a]=[],u=0;u<c;++u)(i=o[u])&&e.call(i,i.__data__,u,o)&&f.push(i);return new ae(r,this._parents)},data:function(e,t){if(!e)return b=new Array(this.size()),s=-1,this.each(function(e){b[++s]=e}),b;var n,r=t?L:N,a=this._parents,i=this._groups;"function"!=typeof e&&(n=e,e=function(){return n});for(var o=i.length,c=new Array(o),f=new Array(o),u=new Array(o),s=0;s<o;++s){var d=a[s],l=i[s],h=l.length,b=e.call(d,d&&d.__data__,s,a),p=b.length,g=f[s]=new Array(p),m=c[s]=new Array(p);r(d,l,g,m,u[s]=new Array(h),b,t);for(var v,y,w=0,x=0;w<p;++w)if(v=g[w]){for(w>=x&&(x=w+1);!(y=m[x])&&++x<p;);v._next=y||null}}return(c=new ae(c,a))._enter=f,c._exit=u,c},enter:function(){return new ae(this._enter||this._groups.map(P),this._parents)},exit:function(){return new ae(this._exit||this._groups.map(P),this._parents)},merge:function(e){for(var t=this._groups,n=e._groups,r=t.length,a=n.length,i=Math.min(r,a),o=new Array(r),c=0;c<i;++c)for(var f,u=t[c],s=n[c],d=u.length,l=o[c]=new Array(d),h=0;h<d;++h)(f=u[h]||s[h])&&(l[h]=f);for(;c<r;++c)o[c]=t[c];return new ae(o,this._parents)},order:function(){for(var e=this._groups,t=-1,n=e.length;++t<n;)for(var r,a=e[t],i=a.length-1,o=a[i];--i>=0;)(r=a[i])&&(o&&o!==r.nextSibling&&o.parentNode.insertBefore(r,o),o=r);return this},sort:function(e){function t(t,n){return t&&n?e(t.__data__,n.__data__):!t-!n}e||(e=D);for(var n=this._groups,r=n.length,a=new Array(r),i=0;i<r;++i){for(var o,c=n[i],f=c.length,u=a[i]=new Array(f),s=0;s<f;++s)(o=c[s])&&(u[s]=o);u.sort(t)}return new ae(a,this._parents).order()},call:function(){var e=arguments[0];return arguments[0]=this,e.apply(null,arguments),this},nodes:function(){var e=new Array(this.size()),t=-1;return this.each(function(){e[++t]=this}),e},node:function(){for(var e=this._groups,t=0,n=e.length;t<n;++t)for(var r=e[t],a=0,i=r.length;a<i;++a){var o=r[a];if(o)return o}return null},size:function(){var e=0;return this.each(function(){++e}),e},empty:function(){return!this.node()},each:function(e){for(var t=this._groups,n=0,r=t.length;n<r;++n)for(var a,i=t[n],o=0,c=i.length;o<c;++o)(a=i[o])&&e.call(a,a.__data__,o,i);return this},attr:function(e,t){var n=v(e);if(arguments.length<2){var r=this.node();return n.local?r.getAttributeNS(n.space,n.local):r.getAttribute(n)}return this.each((null==t?n.local?function(e){return function(){this.removeAttributeNS(e.space,e.local)}}:function(e){return function(){this.removeAttribute(e)}}:"function"==typeof t?n.local?function(e,t){return function(){var n=t.apply(this,arguments);null==n?this.removeAttributeNS(e.space,e.local):this.setAttributeNS(e.space,e.local,n)}}:function(e,t){return function(){var n=t.apply(this,arguments);null==n?this.removeAttribute(e):this.setAttribute(e,n)}}:n.local?function(e,t){return function(){this.setAttributeNS(e.space,e.local,t)}}:function(e,t){return function(){this.setAttribute(e,t)}})(n,t))},style:function(e,t,n){return arguments.length>1?this.each((null==t?function(e){return function(){this.style.removeProperty(e)}}:"function"==typeof t?function(e,t,n){return function(){var r=t.apply(this,arguments);null==r?this.style.removeProperty(e):this.style.setProperty(e,r,n)}}:function(e,t,n){return function(){this.style.setProperty(e,t,n)}})(e,t,null==n?"":n)):B(this.node(),e)},property:function(e,t){return arguments.length>1?this.each((null==t?function(e){return function(){delete this[e]}}:"function"==typeof t?function(e,t){return function(){var n=t.apply(this,arguments);null==n?delete this[e]:this[e]=n}}:function(e,t){return function(){this[e]=t}})(e,t)):this.node()[e]},classed:function(e,t){var n=F(e+"");if(arguments.length<2){for(var r=U(this.node()),a=-1,i=n.length;++a<i;)if(!r.contains(n[a]))return!1;return!0}return this.each(("function"==typeof t?function(e,t){return function(){(t.apply(this,arguments)?R:O)(this,e)}}:t?function(e){return function(){R(this,e)}}:function(e){return function(){O(this,e)}})(n,t))},text:function(e){return arguments.length?this.each(null==e?Y:("function"==typeof e?function(e){return function(){var t=e.apply(this,arguments);this.textContent=null==t?"":t}}:function(e){return function(){this.textContent=e}})(e)):this.node().textContent},html:function(e){return arguments.length?this.each(null==e?j:("function"==typeof e?function(e){return function(){var t=e.apply(this,arguments);this.innerHTML=null==t?"":t}}:function(e){return function(){this.innerHTML=e}})(e)):this.node().innerHTML},raise:function(){return this.each(G)},lower:function(){return this.each(V)},append:function(e){var t="function"==typeof e?e:y(e);return this.select(function(){return this.appendChild(t.apply(this,arguments))})},insert:function(e,t){var n="function"==typeof e?e:y(e),r=null==t?X:"function"==typeof t?t:x(t);return this.select(function(){return this.insertBefore(n.apply(this,arguments),r.apply(this,arguments)||null)})},remove:function(){return this.each(q)},clone:function(e){return this.select(e?W:z)},datum:function(e){return arguments.length?this.property("__data__",e):this.node().__data__},on:function(e,t,n){var r,a,i=function(e){return e.trim().split(/^|\s+/).map(function(e){var t="",n=e.indexOf(".");return n>=0&&(t=e.slice(n+1),e=e.slice(0,n)),{type:e,name:t}})}(e+""),o=i.length;if(!(arguments.length<2)){for(c=t?te:ee,null==n&&(n=!1),r=0;r<o;++r)this.each(c(i[r],t,n));return this}var c=this.node().__on;if(c)for(var f,u=0,s=c.length;u<s;++u)for(r=0,f=c[u];r<o;++r)if((a=i[r]).type===f.type&&a.name===f.name)return f.value},dispatch:function(e,t){return this.each(("function"==typeof t?function(e,t){return function(){return ne(this,e,t.apply(this,arguments))}}:function(e,t){return function(){return ne(this,e,t)}})(e,t))}};var oe=function(e){return"string"==typeof e?new ae([[document.querySelector(e)]],[document.documentElement]):new ae([[e]],re)},ce=function(e){return"string"==typeof e?new ae([document.querySelectorAll(e)],[document.documentElement]):new ae([null==e?[]:e],re)};function fe(){}function ue(e,t){var n=new fe;if(e instanceof fe)e.each(function(e,t){n.set(t,e)});else if(Array.isArray(e)){var r,a=-1,i=e.length;if(null==t)for(;++a<i;)n.set(a,e[a]);else for(;++a<i;)n.set(t(r=e[a],a,e),r)}else if(e)for(var o in e)n.set(o,e[o]);return n}fe.prototype=ue.prototype={constructor:fe,has:function(e){return"$"+e in this},get:function(e){return this["$"+e]},set:function(e,t){return this["$"+e]=t,this},remove:function(e){var t="$"+e;return t in this&&delete this[t]},clear:function(){for(var e in this)"$"===e[0]&&delete this[e]},keys:function(){var e=[];for(var t in this)"$"===t[0]&&e.push(t.slice(1));return e},values:function(){var e=[];for(var t in this)"$"===t[0]&&e.push(this[t]);return e},entries:function(){var e=[];for(var t in this)"$"===t[0]&&e.push({key:t.slice(1),value:this[t]});return e},size:function(){var e=0;for(var t in this)"$"===t[0]&&++e;return e},empty:function(){for(var e in this)if("$"===e[0])return!1;return!0},each:function(e){for(var t in this)"$"===t[0]&&e(this[t],t.slice(1),this)}};var se=function(){var e,t,n,r=[],a=[];function i(n,a,o,c){if(a>=r.length)return null!=e&&n.sort(e),null!=t?t(n):n;for(var f,u,s,d=-1,l=n.length,h=r[a++],b=ue(),p=o();++d<l;)(s=b.get(f=h(u=n[d])+""))?s.push(u):b.set(f,[u]);return b.each(function(e,t){c(p,t,i(e,a,o,c))}),p}return n={object:function(e){return i(e,0,de,le)},map:function(e){return i(e,0,he,be)},entries:function(e){return function e(n,i){if(++i>r.length)return n;var o,c=a[i-1];return null!=t&&i>=r.length?o=n.entries():(o=[],n.each(function(t,n){o.push({key:n,values:e(t,i)})})),null!=c?o.sort(function(e,t){return c(e.key,t.key)}):o}(i(e,0,he,be),0)},key:function(e){return r.push(e),n},sortKeys:function(e){return a[r.length-1]=e,n},sortValues:function(t){return e=t,n},rollup:function(e){return t=e,n}}};function de(){return{}}function le(e,t,n){e[t]=n}function he(){return ue()}function be(e,t,n){e.set(t,n)}var pe=function(e){var t=[];for(var n in e)t.push(n);return t},ge=function(e){var t=[];for(var n in e)t.push(e[n]);return t};function me(){const e="https://gtexportal.org/rest/v1/";return{geneId:e+"reference/geneId?format=json&geneId=",geneExp:e+"expression/geneExpression?datasetId=gtex_v7&gencodeId=",tissue:e+"dataset/tissueInfo",topInTissueFiltered:e+"expression/topExpressedGenes?datasetId=gtex_v7&filterMtGene=true&sort_by=median&sortDirection=desc&page_size=50&tissueId=",topInTissue:e+"expression/topExpressedGenes?datasetId=gtex_v7&sort_by=median&sortDirection=desc&page_size=50&tissueId=",medExpById:e+"expression/medianGeneExpression?datasetId=gtex_v7&hcluster=true&page_size=10000&gencodeId=",exonExp:e+"expression/exonExpression?datasetId=gtex_v7&gencodeId=",junctionExp:e+"expression/junctionExpression?datasetId=gtex_v7&hcluster=true&gencodeId=",isoformExp:e+"expression/isoformExpression?datasetId=gtex_v7&boxplotDetail=median&gencodeId=",geneModel:e+"reference/collapsedGeneModel?unfiltered=false&release=v7&gencode_id=",geneModelUnfiltered:e+"reference/collapsedGeneModel?unfiltered=true&release=v7&gencode_id=",isoform:e+"reference/transcript?release=v7&gencode_id=",liverGeneExp:"data/top50.genes.liver.genomic.median.tpm.json",cerebellumGeneExp:"data/top.gtex.cerebellum.genes.median.tpm.tsv",mayoGeneExp:"data/gtex+mayo.top.cerebellum_ad.genes.median.tpm.tsv"}}function ve(e){if(!e.hasOwnProperty("tissueInfo"))throw"Fatal Error: parseTissues input error.";const t=e.tissueInfo;return["tissueId","tissueName","colorHex"].forEach(e=>{if(!t[0].hasOwnProperty(e))throw"Fatal Error: parseTissue attr not found: "+e}),t}var ye=function(e,t){return e<t?-1:e>t?1:e>=t?0:NaN};var we,xe,_e=(1===(we=ye).length&&(xe=we,we=function(e,t){return ye(xe(e),t)}),{left:function(e,t,n,r){for(null==n&&(n=0),null==r&&(r=e.length);n<r;){var a=n+r>>>1;we(e[a],t)<0?n=a+1:r=a}return n},right:function(e,t,n,r){for(null==n&&(n=0),null==r&&(r=e.length);n<r;){var a=n+r>>>1;we(e[a],t)>0?r=a:n=a+1}return n}}).right,Me=function(e,t,n){e=+e,t=+t,n=(a=arguments.length)<2?(t=e,e=0,1):a<3?1:+n;for(var r=-1,a=0|Math.max(0,Math.ceil((t-e)/n)),i=new Array(a);++r<a;)i[r]=e+r*n;return i},Ae=Math.sqrt(50),Te=Math.sqrt(10),Se=Math.sqrt(2),Ce=function(e,t,n){var r,a,i,o,c=-1;if(n=+n,(e=+e)===(t=+t)&&n>0)return[e];if((r=t<e)&&(a=e,e=t,t=a),0===(o=Pe(e,t,n))||!isFinite(o))return[];if(o>0)for(e=Math.ceil(e/o),t=Math.floor(t/o),i=new Array(a=Math.ceil(t-e+1));++c<a;)i[c]=(e+c)*o;else for(e=Math.floor(e*o),t=Math.ceil(t*o),i=new Array(a=Math.ceil(e-t+1));++c<a;)i[c]=(e-c)/o;return r&&i.reverse(),i};function Pe(e,t,n){var r=(t-e)/Math.max(0,n),a=Math.floor(Math.log(r)/Math.LN10),i=r/Math.pow(10,a);return a>=0?(i>=Ae?10:i>=Te?5:i>=Se?2:1)*Math.pow(10,a):-Math.pow(10,-a)/(i>=Ae?10:i>=Te?5:i>=Se?2:1)}var ke=function(e,t){var n,r,a=e.length,i=-1;if(null==t){for(;++i<a;)if(null!=(n=e[i])&&n>=n)for(r=n;++i<a;)null!=(n=e[i])&&n>r&&(r=n)}else for(;++i<a;)if(null!=(n=t(e[i],i,e))&&n>=n)for(r=n;++i<a;)null!=(n=t(e[i],i,e))&&n>r&&(r=n);return r},Ee=Array.prototype,Ne=Ee.map,Le=Ee.slice,De={name:"implicit"};function Ie(){var e,t,n=function e(t){var n=ue(),r=[],a=De;function i(e){var i=e+"",o=n.get(i);if(!o){if(a!==De)return a;n.set(i,o=r.push(e))}return t[(o-1)%t.length]}return t=null==t?[]:Le.call(t),i.domain=function(e){if(!arguments.length)return r.slice();r=[],n=ue();for(var t,a,o=-1,c=e.length;++o<c;)n.has(a=(t=e[o])+"")||n.set(a,r.push(t));return i},i.range=function(e){return arguments.length?(t=Le.call(e),i):t.slice()},i.unknown=function(e){return arguments.length?(a=e,i):a},i.copy=function(){return e().domain(r).range(t).unknown(a)},i}().unknown(void 0),r=n.domain,a=n.range,i=[0,1],o=!1,c=0,f=0,u=.5;function s(){var n=r().length,s=i[1]<i[0],d=i[s-0],l=i[1-s];e=(l-d)/Math.max(1,n-c+2*f),o&&(e=Math.floor(e)),d+=(l-d-e*(n-c))*u,t=e*(1-c),o&&(d=Math.round(d),t=Math.round(t));var h=Me(n).map(function(t){return d+e*t});return a(s?h.reverse():h)}return delete n.unknown,n.domain=function(e){return arguments.length?(r(e),s()):r()},n.range=function(e){return arguments.length?(i=[+e[0],+e[1]],s()):i.slice()},n.rangeRound=function(e){return i=[+e[0],+e[1]],o=!0,s()},n.bandwidth=function(){return t},n.step=function(){return e},n.round=function(e){return arguments.length?(o=!!e,s()):o},n.padding=function(e){return arguments.length?(c=f=Math.max(0,Math.min(1,e)),s()):c},n.paddingInner=function(e){return arguments.length?(c=Math.max(0,Math.min(1,e)),s()):c},n.paddingOuter=function(e){return arguments.length?(f=Math.max(0,Math.min(1,e)),s()):f},n.align=function(e){return arguments.length?(u=Math.max(0,Math.min(1,e)),s()):u},n.copy=function(){return Ie().domain(r()).range(i).round(o).paddingInner(c).paddingOuter(f).align(u)},s()}var $e=function(e,t,n){e.prototype=t.prototype=n,n.constructor=e};function Be(e,t){var n=Object.create(e.prototype);for(var r in t)n[r]=t[r];return n}function Fe(){}var Ue="\\s*([+-]?\\d+)\\s*",He="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",Re="\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",Oe=/^#([0-9a-f]{3})$/,Ye=/^#([0-9a-f]{6})$/,je=new RegExp("^rgb\\("+[Ue,Ue,Ue]+"\\)$"),Ge=new RegExp("^rgb\\("+[Re,Re,Re]+"\\)$"),Ve=new RegExp("^rgba\\("+[Ue,Ue,Ue,He]+"\\)$"),Xe=new RegExp("^rgba\\("+[Re,Re,Re,He]+"\\)$"),qe=new RegExp("^hsl\\("+[He,Re,Re]+"\\)$"),ze=new RegExp("^hsla\\("+[He,Re,Re,He]+"\\)$"),We={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function Ze(e){var t;return e=(e+"").trim().toLowerCase(),(t=Oe.exec(e))?new tt((t=parseInt(t[1],16))>>8&15|t>>4&240,t>>4&15|240&t,(15&t)<<4|15&t,1):(t=Ye.exec(e))?Je(parseInt(t[1],16)):(t=je.exec(e))?new tt(t[1],t[2],t[3],1):(t=Ge.exec(e))?new tt(255*t[1]/100,255*t[2]/100,255*t[3]/100,1):(t=Ve.exec(e))?Qe(t[1],t[2],t[3],t[4]):(t=Xe.exec(e))?Qe(255*t[1]/100,255*t[2]/100,255*t[3]/100,t[4]):(t=qe.exec(e))?nt(t[1],t[2]/100,t[3]/100,1):(t=ze.exec(e))?nt(t[1],t[2]/100,t[3]/100,t[4]):We.hasOwnProperty(e)?Je(We[e]):"transparent"===e?new tt(NaN,NaN,NaN,0):null}function Je(e){return new tt(e>>16&255,e>>8&255,255&e,1)}function Qe(e,t,n,r){return r<=0&&(e=t=n=NaN),new tt(e,t,n,r)}function Ke(e){return e instanceof Fe||(e=Ze(e)),e?new tt((e=e.rgb()).r,e.g,e.b,e.opacity):new tt}function et(e,t,n,r){return 1===arguments.length?Ke(e):new tt(e,t,n,null==r?1:r)}function tt(e,t,n,r){this.r=+e,this.g=+t,this.b=+n,this.opacity=+r}function nt(e,t,n,r){return r<=0?e=t=n=NaN:n<=0||n>=1?e=t=NaN:t<=0&&(e=NaN),new rt(e,t,n,r)}function rt(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}function at(e,t,n){return 255*(e<60?t+(n-t)*e/60:e<180?n:e<240?t+(n-t)*(240-e)/60:t)}$e(Fe,Ze,{displayable:function(){return this.rgb().displayable()},toString:function(){return this.rgb()+""}}),$e(tt,et,Be(Fe,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new tt(this.r*e,this.g*e,this.b*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new tt(this.r*e,this.g*e,this.b*e,this.opacity)},rgb:function(){return this},displayable:function(){return 0<=this.r&&this.r<=255&&0<=this.g&&this.g<=255&&0<=this.b&&this.b<=255&&0<=this.opacity&&this.opacity<=1},toString:function(){var e=this.opacity;return(1===(e=isNaN(e)?1:Math.max(0,Math.min(1,e)))?"rgb(":"rgba(")+Math.max(0,Math.min(255,Math.round(this.r)||0))+", "+Math.max(0,Math.min(255,Math.round(this.g)||0))+", "+Math.max(0,Math.min(255,Math.round(this.b)||0))+(1===e?")":", "+e+")")}})),$e(rt,function(e,t,n,r){return 1===arguments.length?function(e){if(e instanceof rt)return new rt(e.h,e.s,e.l,e.opacity);if(e instanceof Fe||(e=Ze(e)),!e)return new rt;if(e instanceof rt)return e;var t=(e=e.rgb()).r/255,n=e.g/255,r=e.b/255,a=Math.min(t,n,r),i=Math.max(t,n,r),o=NaN,c=i-a,f=(i+a)/2;return c?(o=t===i?(n-r)/c+6*(n<r):n===i?(r-t)/c+2:(t-n)/c+4,c/=f<.5?i+a:2-i-a,o*=60):c=f>0&&f<1?0:o,new rt(o,c,f,e.opacity)}(e):new rt(e,t,n,null==r?1:r)},Be(Fe,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new rt(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new rt(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=this.h%360+360*(this.h<0),t=isNaN(e)||isNaN(this.s)?0:this.s,n=this.l,r=n+(n<.5?n:1-n)*t,a=2*n-r;return new tt(at(e>=240?e-240:e+120,a,r),at(e,a,r),at(e<120?e+240:e-120,a,r),this.opacity)},displayable:function(){return(0<=this.s&&this.s<=1||isNaN(this.s))&&0<=this.l&&this.l<=1&&0<=this.opacity&&this.opacity<=1}}));var it=Math.PI/180,ot=180/Math.PI,ct=.95047,ft=1,ut=1.08883,st=4/29,dt=6/29,lt=3*dt*dt,ht=dt*dt*dt;function bt(e){if(e instanceof pt)return new pt(e.l,e.a,e.b,e.opacity);if(e instanceof wt){var t=e.h*it;return new pt(e.l,Math.cos(t)*e.c,Math.sin(t)*e.c,e.opacity)}e instanceof tt||(e=Ke(e));var n=yt(e.r),r=yt(e.g),a=yt(e.b),i=gt((.4124564*n+.3575761*r+.1804375*a)/ct),o=gt((.2126729*n+.7151522*r+.072175*a)/ft);return new pt(116*o-16,500*(i-o),200*(o-gt((.0193339*n+.119192*r+.9503041*a)/ut)),e.opacity)}function pt(e,t,n,r){this.l=+e,this.a=+t,this.b=+n,this.opacity=+r}function gt(e){return e>ht?Math.pow(e,1/3):e/lt+st}function mt(e){return e>dt?e*e*e:lt*(e-st)}function vt(e){return 255*(e<=.0031308?12.92*e:1.055*Math.pow(e,1/2.4)-.055)}function yt(e){return(e/=255)<=.04045?e/12.92:Math.pow((e+.055)/1.055,2.4)}function wt(e,t,n,r){this.h=+e,this.c=+t,this.l=+n,this.opacity=+r}$e(pt,function(e,t,n,r){return 1===arguments.length?bt(e):new pt(e,t,n,null==r?1:r)},Be(Fe,{brighter:function(e){return new pt(this.l+18*(null==e?1:e),this.a,this.b,this.opacity)},darker:function(e){return new pt(this.l-18*(null==e?1:e),this.a,this.b,this.opacity)},rgb:function(){var e=(this.l+16)/116,t=isNaN(this.a)?e:e+this.a/500,n=isNaN(this.b)?e:e-this.b/200;return e=ft*mt(e),new tt(vt(3.2404542*(t=ct*mt(t))-1.5371385*e-.4985314*(n=ut*mt(n))),vt(-.969266*t+1.8760108*e+.041556*n),vt(.0556434*t-.2040259*e+1.0572252*n),this.opacity)}})),$e(wt,function(e,t,n,r){return 1===arguments.length?function(e){if(e instanceof wt)return new wt(e.h,e.c,e.l,e.opacity);e instanceof pt||(e=bt(e));var t=Math.atan2(e.b,e.a)*ot;return new wt(t<0?t+360:t,Math.sqrt(e.a*e.a+e.b*e.b),e.l,e.opacity)}(e):new wt(e,t,n,null==r?1:r)},Be(Fe,{brighter:function(e){return new wt(this.h,this.c,this.l+18*(null==e?1:e),this.opacity)},darker:function(e){return new wt(this.h,this.c,this.l-18*(null==e?1:e),this.opacity)},rgb:function(){return bt(this).rgb()}}));var xt=-.14861,_t=1.78277,Mt=-.29227,At=-.90649,Tt=1.97294,St=Tt*At,Ct=Tt*_t,Pt=_t*Mt-At*xt;function kt(e,t,n,r){return 1===arguments.length?function(e){if(e instanceof Et)return new Et(e.h,e.s,e.l,e.opacity);e instanceof tt||(e=Ke(e));var t=e.r/255,n=e.g/255,r=e.b/255,a=(Pt*r+St*t-Ct*n)/(Pt+St-Ct),i=r-a,o=(Tt*(n-a)-Mt*i)/At,c=Math.sqrt(o*o+i*i)/(Tt*a*(1-a)),f=c?Math.atan2(o,i)*ot-120:NaN;return new Et(f<0?f+360:f,c,a,e.opacity)}(e):new Et(e,t,n,null==r?1:r)}function Et(e,t,n,r){this.h=+e,this.s=+t,this.l=+n,this.opacity=+r}function Nt(e,t,n,r,a){var i=e*e,o=i*e;return((1-3*e+3*i-o)*t+(4-6*i+3*o)*n+(1+3*e+3*i-3*o)*r+o*a)/6}$e(Et,kt,Be(Fe,{brighter:function(e){return e=null==e?1/.7:Math.pow(1/.7,e),new Et(this.h,this.s,this.l*e,this.opacity)},darker:function(e){return e=null==e?.7:Math.pow(.7,e),new Et(this.h,this.s,this.l*e,this.opacity)},rgb:function(){var e=isNaN(this.h)?0:(this.h+120)*it,t=+this.l,n=isNaN(this.s)?0:this.s*t*(1-t),r=Math.cos(e),a=Math.sin(e);return new tt(255*(t+n*(xt*r+_t*a)),255*(t+n*(Mt*r+At*a)),255*(t+n*(Tt*r)),this.opacity)}}));var Lt=function(e){return function(){return e}};function Dt(e,t){return function(n){return e+n*t}}function It(e){return 1==(e=+e)?$t:function(t,n){return n-t?function(e,t,n){return e=Math.pow(e,n),t=Math.pow(t,n)-e,n=1/n,function(r){return Math.pow(e+r*t,n)}}(t,n,e):Lt(isNaN(t)?n:t)}}function $t(e,t){var n=t-e;return n?Dt(e,n):Lt(isNaN(e)?t:e)}var Bt=function e(t){var n=It(t);function r(e,t){var r=n((e=et(e)).r,(t=et(t)).r),a=n(e.g,t.g),i=n(e.b,t.b),o=$t(e.opacity,t.opacity);return function(t){return e.r=r(t),e.g=a(t),e.b=i(t),e.opacity=o(t),e+""}}return r.gamma=e,r}(1);function Ft(e){return function(t){var n,r,a=t.length,i=new Array(a),o=new Array(a),c=new Array(a);for(n=0;n<a;++n)r=et(t[n]),i[n]=r.r||0,o[n]=r.g||0,c[n]=r.b||0;return i=e(i),o=e(o),c=e(c),r.opacity=1,function(e){return r.r=i(e),r.g=o(e),r.b=c(e),r+""}}}var Ut=Ft(function(e){var t=e.length-1;return function(n){var r=n<=0?n=0:n>=1?(n=1,t-1):Math.floor(n*t),a=e[r],i=e[r+1],o=r>0?e[r-1]:2*a-i,c=r<t-1?e[r+2]:2*i-a;return Nt((n-r/t)*t,o,a,i,c)}}),Ht=(Ft(function(e){var t=e.length;return function(n){var r=Math.floor(((n%=1)<0?++n:n)*t),a=e[(r+t-1)%t],i=e[r%t],o=e[(r+1)%t],c=e[(r+2)%t];return Nt((n-r/t)*t,a,i,o,c)}}),function(e,t){return t-=e=+e,function(n){return e+t*n}}),Rt=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,Ot=new RegExp(Rt.source,"g");var Yt,jt,Gt,Vt,Xt=function(e,t){var n,r,a,i=Rt.lastIndex=Ot.lastIndex=0,o=-1,c=[],f=[];for(e+="",t+="";(n=Rt.exec(e))&&(r=Ot.exec(t));)(a=r.index)>i&&(a=t.slice(i,a),c[o]?c[o]+=a:c[++o]=a),(n=n[0])===(r=r[0])?c[o]?c[o]+=r:c[++o]=r:(c[++o]=null,f.push({i:o,x:Ht(n,r)})),i=Ot.lastIndex;return i<t.length&&(a=t.slice(i),c[o]?c[o]+=a:c[++o]=a),c.length<2?f[0]?function(e){return function(t){return e(t)+""}}(f[0].x):function(e){return function(){return e}}(t):(t=f.length,function(e){for(var n,r=0;r<t;++r)c[(n=f[r]).i]=n.x(e);return c.join("")})},qt=function(e,t){var n,r=typeof t;return null==t||"boolean"===r?Lt(t):("number"===r?Ht:"string"===r?(n=Ze(t))?(t=n,Bt):Xt:t instanceof Ze?Bt:t instanceof Date?function(e,t){var n=new Date;return t-=e=+e,function(r){return n.setTime(e+t*r),n}}:Array.isArray(t)?function(e,t){var n,r=t?t.length:0,a=e?Math.min(r,e.length):0,i=new Array(a),o=new Array(r);for(n=0;n<a;++n)i[n]=qt(e[n],t[n]);for(;n<r;++n)o[n]=t[n];return function(e){for(n=0;n<a;++n)o[n]=i[n](e);return o}}:"function"!=typeof t.valueOf&&"function"!=typeof t.toString||isNaN(t)?function(e,t){var n,r={},a={};for(n in null!==e&&"object"==typeof e||(e={}),null!==t&&"object"==typeof t||(t={}),t)n in e?r[n]=qt(e[n],t[n]):a[n]=t[n];return function(e){for(n in r)a[n]=r[n](e);return a}}:Ht)(e,t)},zt=function(e,t){return t-=e=+e,function(n){return Math.round(e+t*n)}},Wt=180/Math.PI,Zt={translateX:0,translateY:0,rotate:0,skewX:0,scaleX:1,scaleY:1},Jt=function(e,t,n,r,a,i){var o,c,f;return(o=Math.sqrt(e*e+t*t))&&(e/=o,t/=o),(f=e*n+t*r)&&(n-=e*f,r-=t*f),(c=Math.sqrt(n*n+r*r))&&(n/=c,r/=c,f/=c),e*r<t*n&&(e=-e,t=-t,f=-f,o=-o),{translateX:a,translateY:i,rotate:Math.atan2(t,e)*Wt,skewX:Math.atan(f)*Wt,scaleX:o,scaleY:c}};function Qt(e,t,n,r){function a(e){return e.length?e.pop()+" ":""}return function(i,o){var c=[],f=[];return i=e(i),o=e(o),function(e,r,a,i,o,c){if(e!==a||r!==i){var f=o.push("translate(",null,t,null,n);c.push({i:f-4,x:Ht(e,a)},{i:f-2,x:Ht(r,i)})}else(a||i)&&o.push("translate("+a+t+i+n)}(i.translateX,i.translateY,o.translateX,o.translateY,c,f),function(e,t,n,i){e!==t?(e-t>180?t+=360:t-e>180&&(e+=360),i.push({i:n.push(a(n)+"rotate(",null,r)-2,x:Ht(e,t)})):t&&n.push(a(n)+"rotate("+t+r)}(i.rotate,o.rotate,c,f),function(e,t,n,i){e!==t?i.push({i:n.push(a(n)+"skewX(",null,r)-2,x:Ht(e,t)}):t&&n.push(a(n)+"skewX("+t+r)}(i.skewX,o.skewX,c,f),function(e,t,n,r,i,o){if(e!==n||t!==r){var c=i.push(a(i)+"scale(",null,",",null,")");o.push({i:c-4,x:Ht(e,n)},{i:c-2,x:Ht(t,r)})}else 1===n&&1===r||i.push(a(i)+"scale("+n+","+r+")")}(i.scaleX,i.scaleY,o.scaleX,o.scaleY,c,f),i=o=null,function(e){for(var t,n=-1,r=f.length;++n<r;)c[(t=f[n]).i]=t.x(e);return c.join("")}}}var Kt=Qt(function(e){return"none"===e?Zt:(Yt||(Yt=document.createElement("DIV"),jt=document.documentElement,Gt=document.defaultView),Yt.style.transform=e,e=Gt.getComputedStyle(jt.appendChild(Yt),null).getPropertyValue("transform"),jt.removeChild(Yt),e=e.slice(7,-1).split(","),Jt(+e[0],+e[1],+e[2],+e[3],+e[4],+e[5]))},"px, ","px)","deg)"),en=Qt(function(e){return null==e?Zt:(Vt||(Vt=document.createElementNS("http://www.w3.org/2000/svg","g")),Vt.setAttribute("transform",e),(e=Vt.transform.baseVal.consolidate())?(e=e.matrix,Jt(e.a,e.b,e.c,e.d,e.e,e.f)):Zt)},", ",")",")");function tn(e){return function t(n){function r(t,r){var a=e((t=kt(t)).h,(r=kt(r)).h),i=$t(t.s,r.s),o=$t(t.l,r.l),c=$t(t.opacity,r.opacity);return function(e){return t.h=a(e),t.s=i(e),t.l=o(Math.pow(e,n)),t.opacity=c(e),t+""}}return n=+n,r.gamma=t,r}(1)}tn(function(e,t){var n=t-e;return n?Dt(e,n>180||n<-180?n-360*Math.round(n/360):n):Lt(isNaN(e)?t:e)});var nn=tn($t),rn=function(e){return function(){return e}},an=function(e){return+e},on=[0,1];function cn(e,t){return(t-=e=+e)?function(n){return(n-e)/t}:rn(t)}function fn(e,t,n,r){var a=e[0],i=e[1],o=t[0],c=t[1];return i<a?(a=n(i,a),o=r(c,o)):(a=n(a,i),o=r(o,c)),function(e){return o(a(e))}}function un(e,t,n,r){var a=Math.min(e.length,t.length)-1,i=new Array(a),o=new Array(a),c=-1;for(e[a]<e[0]&&(e=e.slice().reverse(),t=t.slice().reverse());++c<a;)i[c]=n(e[c],e[c+1]),o[c]=r(t[c],t[c+1]);return function(t){var n=_e(e,t,1,a)-1;return o[n](i[n](t))}}var sn,dn=function(e,t){if((n=(e=t?e.toExponential(t-1):e.toExponential()).indexOf("e"))<0)return null;var n,r=e.slice(0,n);return[r.length>1?r[0]+r.slice(2):r,+e.slice(n+1)]},ln=function(e){return(e=dn(Math.abs(e)))?e[1]:NaN},hn=function(e,t){var n=dn(e,t);if(!n)return e+"";var r=n[0],a=n[1];return a<0?"0."+new Array(-a).join("0")+r:r.length>a+1?r.slice(0,a+1)+"."+r.slice(a+1):r+new Array(a-r.length+2).join("0")},bn={"":function(e,t){e=e.toPrecision(t);e:for(var n,r=e.length,a=1,i=-1;a<r;++a)switch(e[a]){case".":i=n=a;break;case"0":0===i&&(i=a),n=a;break;case"e":break e;default:i>0&&(i=0)}return i>0?e.slice(0,i)+e.slice(n+1):e},"%":function(e,t){return(100*e).toFixed(t)},b:function(e){return Math.round(e).toString(2)},c:function(e){return e+""},d:function(e){return Math.round(e).toString(10)},e:function(e,t){return e.toExponential(t)},f:function(e,t){return e.toFixed(t)},g:function(e,t){return e.toPrecision(t)},o:function(e){return Math.round(e).toString(8)},p:function(e,t){return hn(100*e,t)},r:hn,s:function(e,t){var n=dn(e,t);if(!n)return e+"";var r=n[0],a=n[1],i=a-(sn=3*Math.max(-8,Math.min(8,Math.floor(a/3))))+1,o=r.length;return i===o?r:i>o?r+new Array(i-o+1).join("0"):i>0?r.slice(0,i)+"."+r.slice(i):"0."+new Array(1-i).join("0")+dn(e,Math.max(0,t+i-1))[0]},X:function(e){return Math.round(e).toString(16).toUpperCase()},x:function(e){return Math.round(e).toString(16)}},pn=/^(?:(.)?([<>=^]))?([+\-\( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?([a-z%])?$/i;function gn(e){return new mn(e)}function mn(e){if(!(t=pn.exec(e)))throw new Error("invalid format: "+e);var t,n=t[1]||" ",r=t[2]||">",a=t[3]||"-",i=t[4]||"",o=!!t[5],c=t[6]&&+t[6],f=!!t[7],u=t[8]&&+t[8].slice(1),s=t[9]||"";"n"===s?(f=!0,s="g"):bn[s]||(s=""),(o||"0"===n&&"="===r)&&(o=!0,n="0",r="="),this.fill=n,this.align=r,this.sign=a,this.symbol=i,this.zero=o,this.width=c,this.comma=f,this.precision=u,this.type=s}gn.prototype=mn.prototype,mn.prototype.toString=function(){return this.fill+this.align+this.sign+this.symbol+(this.zero?"0":"")+(null==this.width?"":Math.max(1,0|this.width))+(this.comma?",":"")+(null==this.precision?"":"."+Math.max(0,0|this.precision))+this.type};var vn,yn,wn,xn=function(e){return e},_n=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"];vn=function(e){var t,n,r=e.grouping&&e.thousands?(t=e.grouping,n=e.thousands,function(e,r){for(var a=e.length,i=[],o=0,c=t[0],f=0;a>0&&c>0&&(f+c+1>r&&(c=Math.max(1,r-f)),i.push(e.substring(a-=c,a+c)),!((f+=c+1)>r));)c=t[o=(o+1)%t.length];return i.reverse().join(n)}):xn,a=e.currency,i=e.decimal,o=e.numerals?function(e){return function(t){return t.replace(/[0-9]/g,function(t){return e[+t]})}}(e.numerals):xn,c=e.percent||"%";function f(e){var t=(e=gn(e)).fill,n=e.align,f=e.sign,u=e.symbol,s=e.zero,d=e.width,l=e.comma,h=e.precision,b=e.type,p="$"===u?a[0]:"#"===u&&/[boxX]/.test(b)?"0"+b.toLowerCase():"",g="$"===u?a[1]:/[%p]/.test(b)?c:"",m=bn[b],v=!b||/[defgprs%]/.test(b);function y(e){var a,c,u,y=p,w=g;if("c"===b)w=m(e)+w,e="";else{var x=(e=+e)<0;if(e=m(Math.abs(e),h),x&&0==+e&&(x=!1),y=(x?"("===f?f:"-":"-"===f||"("===f?"":f)+y,w=("s"===b?_n[8+sn/3]:"")+w+(x&&"("===f?")":""),v)for(a=-1,c=e.length;++a<c;)if(48>(u=e.charCodeAt(a))||u>57){w=(46===u?i+e.slice(a+1):e.slice(a))+w,e=e.slice(0,a);break}}l&&!s&&(e=r(e,1/0));var _=y.length+e.length+w.length,M=_<d?new Array(d-_+1).join(t):"";switch(l&&s&&(e=r(M+e,M.length?d-w.length:1/0),M=""),n){case"<":e=y+e+w+M;break;case"=":e=y+M+e+w;break;case"^":e=M.slice(0,_=M.length>>1)+y+e+w+M.slice(_);break;default:e=M+y+e+w}return o(e)}return h=null==h?b?6:12:/[gprs]/.test(b)?Math.max(1,Math.min(21,h)):Math.max(0,Math.min(20,h)),y.toString=function(){return e+""},y}return{format:f,formatPrefix:function(e,t){var n=f(((e=gn(e)).type="f",e)),r=3*Math.max(-8,Math.min(8,Math.floor(ln(t)/3))),a=Math.pow(10,-r),i=_n[8+r/3];return function(e){return n(a*e)+i}}}}({decimal:".",thousands:",",grouping:[3],currency:["$",""]}),yn=vn.format,wn=vn.formatPrefix;var Mn=function(e,t,n){var r,a=e[0],i=e[e.length-1],o=function(e,t,n){var r=Math.abs(t-e)/Math.max(0,n),a=Math.pow(10,Math.floor(Math.log(r)/Math.LN10)),i=r/a;return i>=Ae?a*=10:i>=Te?a*=5:i>=Se&&(a*=2),t<e?-a:a}(a,i,null==t?10:t);switch((n=gn(null==n?",f":n)).type){case"s":var c=Math.max(Math.abs(a),Math.abs(i));return null!=n.precision||isNaN(r=function(e,t){return Math.max(0,3*Math.max(-8,Math.min(8,Math.floor(ln(t)/3)))-ln(Math.abs(e)))}(o,c))||(n.precision=r),wn(n,c);case"":case"e":case"g":case"p":case"r":null!=n.precision||isNaN(r=function(e,t){return e=Math.abs(e),t=Math.abs(t)-e,Math.max(0,ln(t)-ln(e))+1}(o,Math.max(Math.abs(a),Math.abs(i))))||(n.precision=r-("e"===n.type));break;case"f":case"%":null!=n.precision||isNaN(r=function(e){return Math.max(0,-ln(Math.abs(e)))}(o))||(n.precision=r-2*("%"===n.type))}return yn(n)};function An(e){var t=e.domain;return e.ticks=function(e){var n=t();return Ce(n[0],n[n.length-1],null==e?10:e)},e.tickFormat=function(e,n){return Mn(t(),e,n)},e.nice=function(n){null==n&&(n=10);var r,a=t(),i=0,o=a.length-1,c=a[i],f=a[o];return f<c&&(r=c,c=f,f=r,r=i,i=o,o=r),(r=Pe(c,f,n))>0?r=Pe(c=Math.floor(c/r)*r,f=Math.ceil(f/r)*r,n):r<0&&(r=Pe(c=Math.ceil(c*r)/r,f=Math.floor(f*r)/r,n)),r>0?(a[i]=Math.floor(c/r)*r,a[o]=Math.ceil(f/r)*r,t(a)):r<0&&(a[i]=Math.ceil(c*r)/r,a[o]=Math.floor(f*r)/r,t(a)),e},e}function Tn(){var e=function(e,t){var n,r,a,i=on,o=on,c=qt,f=!1;function u(){return n=Math.min(i.length,o.length)>2?un:fn,r=a=null,s}function s(t){return(r||(r=n(i,o,f?function(e){return function(t,n){var r=e(t=+t,n=+n);return function(e){return e<=t?0:e>=n?1:r(e)}}}(e):e,c)))(+t)}return s.invert=function(e){return(a||(a=n(o,i,cn,f?function(e){return function(t,n){var r=e(t=+t,n=+n);return function(e){return e<=0?t:e>=1?n:r(e)}}}(t):t)))(+e)},s.domain=function(e){return arguments.length?(i=Ne.call(e,an),u()):i.slice()},s.range=function(e){return arguments.length?(o=Le.call(e),u()):o.slice()},s.rangeRound=function(e){return o=Le.call(e),c=zt,u()},s.clamp=function(e){return arguments.length?(f=!!e,u()):f},s.interpolate=function(e){return arguments.length?(c=e,u()):c},u()}(cn,Ht);return e.copy=function(){return t=e,Tn().domain(t.domain()).range(t.range()).interpolate(t.interpolate()).clamp(t.clamp());var t},An(e)}var Sn=new Date,Cn=new Date;function Pn(e,t,n,r){function a(t){return e(t=new Date(+t)),t}return a.floor=a,a.ceil=function(n){return e(n=new Date(n-1)),t(n,1),e(n),n},a.round=function(e){var t=a(e),n=a.ceil(e);return e-t<n-e?t:n},a.offset=function(e,n){return t(e=new Date(+e),null==n?1:Math.floor(n)),e},a.range=function(n,r,i){var o,c=[];if(n=a.ceil(n),i=null==i?1:Math.floor(i),!(n<r&&i>0))return c;do{c.push(o=new Date(+n)),t(n,i),e(n)}while(o<n&&n<r);return c},a.filter=function(n){return Pn(function(t){if(t>=t)for(;e(t),!n(t);)t.setTime(t-1)},function(e,r){if(e>=e)if(r<0)for(;++r<=0;)for(;t(e,-1),!n(e););else for(;--r>=0;)for(;t(e,1),!n(e););})},n&&(a.count=function(t,r){return Sn.setTime(+t),Cn.setTime(+r),e(Sn),e(Cn),Math.floor(n(Sn,Cn))},a.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?a.filter(r?function(t){return r(t)%e==0}:function(t){return a.count(0,t)%e==0}):a:null}),a}var kn=Pn(function(){},function(e,t){e.setTime(+e+t)},function(e,t){return t-e});kn.every=function(e){return e=Math.floor(e),isFinite(e)&&e>0?e>1?Pn(function(t){t.setTime(Math.floor(t/e)*e)},function(t,n){t.setTime(+t+n*e)},function(t,n){return(n-t)/e}):kn:null};var En=6e4,Nn=6048e5,Ln=(Pn(function(e){e.setTime(1e3*Math.floor(e/1e3))},function(e,t){e.setTime(+e+1e3*t)},function(e,t){return(t-e)/1e3},function(e){return e.getUTCSeconds()}),Pn(function(e){e.setTime(Math.floor(e/En)*En)},function(e,t){e.setTime(+e+t*En)},function(e,t){return(t-e)/En},function(e){return e.getMinutes()}),Pn(function(e){var t=e.getTimezoneOffset()*En%36e5;t<0&&(t+=36e5),e.setTime(36e5*Math.floor((+e-t)/36e5)+t)},function(e,t){e.setTime(+e+36e5*t)},function(e,t){return(t-e)/36e5},function(e){return e.getHours()}),Pn(function(e){e.setHours(0,0,0,0)},function(e,t){e.setDate(e.getDate()+t)},function(e,t){return(t-e-(t.getTimezoneOffset()-e.getTimezoneOffset())*En)/864e5},function(e){return e.getDate()-1}));function Dn(e){return Pn(function(t){t.setDate(t.getDate()-(t.getDay()+7-e)%7),t.setHours(0,0,0,0)},function(e,t){e.setDate(e.getDate()+7*t)},function(e,t){return(t-e-(t.getTimezoneOffset()-e.getTimezoneOffset())*En)/Nn})}var In=Dn(0),$n=Dn(1),Bn=(Dn(2),Dn(3),Dn(4)),Fn=(Dn(5),Dn(6),Pn(function(e){e.setDate(1),e.setHours(0,0,0,0)},function(e,t){e.setMonth(e.getMonth()+t)},function(e,t){return t.getMonth()-e.getMonth()+12*(t.getFullYear()-e.getFullYear())},function(e){return e.getMonth()}),Pn(function(e){e.setMonth(0,1),e.setHours(0,0,0,0)},function(e,t){e.setFullYear(e.getFullYear()+t)},function(e,t){return t.getFullYear()-e.getFullYear()},function(e){return e.getFullYear()}));Fn.every=function(e){return isFinite(e=Math.floor(e))&&e>0?Pn(function(t){t.setFullYear(Math.floor(t.getFullYear()/e)*e),t.setMonth(0,1),t.setHours(0,0,0,0)},function(t,n){t.setFullYear(t.getFullYear()+n*e)}):null};Pn(function(e){e.setUTCSeconds(0,0)},function(e,t){e.setTime(+e+t*En)},function(e,t){return(t-e)/En},function(e){return e.getUTCMinutes()}),Pn(function(e){e.setUTCMinutes(0,0,0)},function(e,t){e.setTime(+e+36e5*t)},function(e,t){return(t-e)/36e5},function(e){return e.getUTCHours()});var Un=Pn(function(e){e.setUTCHours(0,0,0,0)},function(e,t){e.setUTCDate(e.getUTCDate()+t)},function(e,t){return(t-e)/864e5},function(e){return e.getUTCDate()-1});function Hn(e){return Pn(function(t){t.setUTCDate(t.getUTCDate()-(t.getUTCDay()+7-e)%7),t.setUTCHours(0,0,0,0)},function(e,t){e.setUTCDate(e.getUTCDate()+7*t)},function(e,t){return(t-e)/Nn})}var Rn=Hn(0),On=Hn(1),Yn=(Hn(2),Hn(3),Hn(4)),jn=(Hn(5),Hn(6),Pn(function(e){e.setUTCDate(1),e.setUTCHours(0,0,0,0)},function(e,t){e.setUTCMonth(e.getUTCMonth()+t)},function(e,t){return t.getUTCMonth()-e.getUTCMonth()+12*(t.getUTCFullYear()-e.getUTCFullYear())},function(e){return e.getUTCMonth()}),Pn(function(e){e.setUTCMonth(0,1),e.setUTCHours(0,0,0,0)},function(e,t){e.setUTCFullYear(e.getUTCFullYear()+t)},function(e,t){return t.getUTCFullYear()-e.getUTCFullYear()},function(e){return e.getUTCFullYear()}));function Gn(e){if(0<=e.y&&e.y<100){var t=new Date(-1,e.m,e.d,e.H,e.M,e.S,e.L);return t.setFullYear(e.y),t}return new Date(e.y,e.m,e.d,e.H,e.M,e.S,e.L)}function Vn(e){if(0<=e.y&&e.y<100){var t=new Date(Date.UTC(-1,e.m,e.d,e.H,e.M,e.S,e.L));return t.setUTCFullYear(e.y),t}return new Date(Date.UTC(e.y,e.m,e.d,e.H,e.M,e.S,e.L))}function Xn(e){return{y:e,m:0,d:1,H:0,M:0,S:0,L:0}}jn.every=function(e){return isFinite(e=Math.floor(e))&&e>0?Pn(function(t){t.setUTCFullYear(Math.floor(t.getUTCFullYear()/e)*e),t.setUTCMonth(0,1),t.setUTCHours(0,0,0,0)},function(t,n){t.setUTCFullYear(t.getUTCFullYear()+n*e)}):null};var qn,zn,Wn,Zn={"-":"",_:" ",0:"0"},Jn=/^\s*\d+/,Qn=/^%/,Kn=/[\\^$*+?|[\]().{}]/g;function er(e,t,n){var r=e<0?"-":"",a=(r?-e:e)+"",i=a.length;return r+(i<n?new Array(n-i+1).join(t)+a:a)}function tr(e){return e.replace(Kn,"\\$&")}function nr(e){return new RegExp("^(?:"+e.map(tr).join("|")+")","i")}function rr(e){for(var t={},n=-1,r=e.length;++n<r;)t[e[n].toLowerCase()]=n;return t}function ar(e,t,n){var r=Jn.exec(t.slice(n,n+1));return r?(e.w=+r[0],n+r[0].length):-1}function ir(e,t,n){var r=Jn.exec(t.slice(n,n+1));return r?(e.u=+r[0],n+r[0].length):-1}function or(e,t,n){var r=Jn.exec(t.slice(n,n+2));return r?(e.U=+r[0],n+r[0].length):-1}function cr(e,t,n){var r=Jn.exec(t.slice(n,n+2));return r?(e.V=+r[0],n+r[0].length):-1}function fr(e,t,n){var r=Jn.exec(t.slice(n,n+2));return r?(e.W=+r[0],n+r[0].length):-1}function ur(e,t,n){var r=Jn.exec(t.slice(n,n+4));return r?(e.y=+r[0],n+r[0].length):-1}function sr(e,t,n){var r=Jn.exec(t.slice(n,n+2));return r?(e.y=+r[0]+(+r[0]>68?1900:2e3),n+r[0].length):-1}function dr(e,t,n){var r=/^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(t.slice(n,n+6));return r?(e.Z=r[1]?0:-(r[2]+(r[3]||"00")),n+r[0].length):-1}function lr(e,t,n){var r=Jn.exec(t.slice(n,n+2));return r?(e.m=r[0]-1,n+r[0].length):-1}function hr(e,t,n){var r=Jn.exec(t.slice(n,n+2));return r?(e.d=+r[0],n+r[0].length):-1}function br(e,t,n){var r=Jn.exec(t.slice(n,n+3));return r?(e.m=0,e.d=+r[0],n+r[0].length):-1}function pr(e,t,n){var r=Jn.exec(t.slice(n,n+2));return r?(e.H=+r[0],n+r[0].length):-1}function gr(e,t,n){var r=Jn.exec(t.slice(n,n+2));return r?(e.M=+r[0],n+r[0].length):-1}function mr(e,t,n){var r=Jn.exec(t.slice(n,n+2));return r?(e.S=+r[0],n+r[0].length):-1}function vr(e,t,n){var r=Jn.exec(t.slice(n,n+3));return r?(e.L=+r[0],n+r[0].length):-1}function yr(e,t,n){var r=Jn.exec(t.slice(n,n+6));return r?(e.L=Math.floor(r[0]/1e3),n+r[0].length):-1}function wr(e,t,n){var r=Qn.exec(t.slice(n,n+1));return r?n+r[0].length:-1}function xr(e,t,n){var r=Jn.exec(t.slice(n));return r?(e.Q=+r[0],n+r[0].length):-1}function _r(e,t,n){var r=Jn.exec(t.slice(n));return r?(e.Q=1e3*+r[0],n+r[0].length):-1}function Mr(e,t){return er(e.getDate(),t,2)}function Ar(e,t){return er(e.getHours(),t,2)}function Tr(e,t){return er(e.getHours()%12||12,t,2)}function Sr(e,t){return er(1+Ln.count(Fn(e),e),t,3)}function Cr(e,t){return er(e.getMilliseconds(),t,3)}function Pr(e,t){return Cr(e,t)+"000"}function kr(e,t){return er(e.getMonth()+1,t,2)}function Er(e,t){return er(e.getMinutes(),t,2)}function Nr(e,t){return er(e.getSeconds(),t,2)}function Lr(e){var t=e.getDay();return 0===t?7:t}function Dr(e,t){return er(In.count(Fn(e),e),t,2)}function Ir(e,t){var n=e.getDay();return e=n>=4||0===n?Bn(e):Bn.ceil(e),er(Bn.count(Fn(e),e)+(4===Fn(e).getDay()),t,2)}function $r(e){return e.getDay()}function Br(e,t){return er($n.count(Fn(e),e),t,2)}function Fr(e,t){return er(e.getFullYear()%100,t,2)}function Ur(e,t){return er(e.getFullYear()%1e4,t,4)}function Hr(e){var t=e.getTimezoneOffset();return(t>0?"-":(t*=-1,"+"))+er(t/60|0,"0",2)+er(t%60,"0",2)}function Rr(e,t){return er(e.getUTCDate(),t,2)}function Or(e,t){return er(e.getUTCHours(),t,2)}function Yr(e,t){return er(e.getUTCHours()%12||12,t,2)}function jr(e,t){return er(1+Un.count(jn(e),e),t,3)}function Gr(e,t){return er(e.getUTCMilliseconds(),t,3)}function Vr(e,t){return Gr(e,t)+"000"}function Xr(e,t){return er(e.getUTCMonth()+1,t,2)}function qr(e,t){return er(e.getUTCMinutes(),t,2)}function zr(e,t){return er(e.getUTCSeconds(),t,2)}function Wr(e){var t=e.getUTCDay();return 0===t?7:t}function Zr(e,t){return er(Rn.count(jn(e),e),t,2)}function Jr(e,t){var n=e.getUTCDay();return e=n>=4||0===n?Yn(e):Yn.ceil(e),er(Yn.count(jn(e),e)+(4===jn(e).getUTCDay()),t,2)}function Qr(e){return e.getUTCDay()}function Kr(e,t){return er(On.count(jn(e),e),t,2)}function ea(e,t){return er(e.getUTCFullYear()%100,t,2)}function ta(e,t){return er(e.getUTCFullYear()%1e4,t,4)}function na(){return"+0000"}function ra(){return"%"}function aa(e){return+e}function ia(e){return Math.floor(+e/1e3)}!function(e){qn=function(e){var t=e.dateTime,n=e.date,r=e.time,a=e.periods,i=e.days,o=e.shortDays,c=e.months,f=e.shortMonths,u=nr(a),s=rr(a),d=nr(i),l=rr(i),h=nr(o),b=rr(o),p=nr(c),g=rr(c),m=nr(f),v=rr(f),y={a:function(e){return o[e.getDay()]},A:function(e){return i[e.getDay()]},b:function(e){return f[e.getMonth()]},B:function(e){return c[e.getMonth()]},c:null,d:Mr,e:Mr,f:Pr,H:Ar,I:Tr,j:Sr,L:Cr,m:kr,M:Er,p:function(e){return a[+(e.getHours()>=12)]},Q:aa,s:ia,S:Nr,u:Lr,U:Dr,V:Ir,w:$r,W:Br,x:null,X:null,y:Fr,Y:Ur,Z:Hr,"%":ra},w={a:function(e){return o[e.getUTCDay()]},A:function(e){return i[e.getUTCDay()]},b:function(e){return f[e.getUTCMonth()]},B:function(e){return c[e.getUTCMonth()]},c:null,d:Rr,e:Rr,f:Vr,H:Or,I:Yr,j:jr,L:Gr,m:Xr,M:qr,p:function(e){return a[+(e.getUTCHours()>=12)]},Q:aa,s:ia,S:zr,u:Wr,U:Zr,V:Jr,w:Qr,W:Kr,x:null,X:null,y:ea,Y:ta,Z:na,"%":ra},x={a:function(e,t,n){var r=h.exec(t.slice(n));return r?(e.w=b[r[0].toLowerCase()],n+r[0].length):-1},A:function(e,t,n){var r=d.exec(t.slice(n));return r?(e.w=l[r[0].toLowerCase()],n+r[0].length):-1},b:function(e,t,n){var r=m.exec(t.slice(n));return r?(e.m=v[r[0].toLowerCase()],n+r[0].length):-1},B:function(e,t,n){var r=p.exec(t.slice(n));return r?(e.m=g[r[0].toLowerCase()],n+r[0].length):-1},c:function(e,n,r){return A(e,t,n,r)},d:hr,e:hr,f:yr,H:pr,I:pr,j:br,L:vr,m:lr,M:gr,p:function(e,t,n){var r=u.exec(t.slice(n));return r?(e.p=s[r[0].toLowerCase()],n+r[0].length):-1},Q:xr,s:_r,S:mr,u:ir,U:or,V:cr,w:ar,W:fr,x:function(e,t,r){return A(e,n,t,r)},X:function(e,t,n){return A(e,r,t,n)},y:sr,Y:ur,Z:dr,"%":wr};function _(e,t){return function(n){var r,a,i,o=[],c=-1,f=0,u=e.length;for(n instanceof Date||(n=new Date(+n));++c<u;)37===e.charCodeAt(c)&&(o.push(e.slice(f,c)),null!=(a=Zn[r=e.charAt(++c)])?r=e.charAt(++c):a="e"===r?" ":"0",(i=t[r])&&(r=i(n,a)),o.push(r),f=c+1);return o.push(e.slice(f,c)),o.join("")}}function M(e,t){return function(n){var r,a,i=Xn(1900);if(A(i,e,n+="",0)!=n.length)return null;if("Q"in i)return new Date(i.Q);if("p"in i&&(i.H=i.H%12+12*i.p),"V"in i){if(i.V<1||i.V>53)return null;"w"in i||(i.w=1),"Z"in i?(r=(a=(r=Vn(Xn(i.y))).getUTCDay())>4||0===a?On.ceil(r):On(r),r=Un.offset(r,7*(i.V-1)),i.y=r.getUTCFullYear(),i.m=r.getUTCMonth(),i.d=r.getUTCDate()+(i.w+6)%7):(r=(a=(r=t(Xn(i.y))).getDay())>4||0===a?$n.ceil(r):$n(r),r=Ln.offset(r,7*(i.V-1)),i.y=r.getFullYear(),i.m=r.getMonth(),i.d=r.getDate()+(i.w+6)%7)}else("W"in i||"U"in i)&&("w"in i||(i.w="u"in i?i.u%7:"W"in i?1:0),a="Z"in i?Vn(Xn(i.y)).getUTCDay():t(Xn(i.y)).getDay(),i.m=0,i.d="W"in i?(i.w+6)%7+7*i.W-(a+5)%7:i.w+7*i.U-(a+6)%7);return"Z"in i?(i.H+=i.Z/100|0,i.M+=i.Z%100,Vn(i)):t(i)}}function A(e,t,n,r){for(var a,i,o=0,c=t.length,f=n.length;o<c;){if(r>=f)return-1;if(37===(a=t.charCodeAt(o++))){if(a=t.charAt(o++),!(i=x[a in Zn?t.charAt(o++):a])||(r=i(e,n,r))<0)return-1}else if(a!=n.charCodeAt(r++))return-1}return r}return y.x=_(n,y),y.X=_(r,y),y.c=_(t,y),w.x=_(n,w),w.X=_(r,w),w.c=_(t,w),{format:function(e){var t=_(e+="",y);return t.toString=function(){return e},t},parse:function(e){var t=M(e+="",Gn);return t.toString=function(){return e},t},utcFormat:function(e){var t=_(e+="",w);return t.toString=function(){return e},t},utcParse:function(e){var t=M(e,Vn);return t.toString=function(){return e},t}}}(e),zn=qn.utcFormat,Wn=qn.utcParse}({dateTime:"%x, %X",date:"%-m/%-d/%Y",time:"%-I:%M:%S %p",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});Date.prototype.toISOString||zn("%Y-%m-%dT%H:%M:%S.%LZ");+new Date("2000-01-01T00:00:00.000Z")||Wn("%Y-%m-%dT%H:%M:%S.%LZ");var oa=function(e){for(var t=e.length/6|0,n=new Array(t),r=0;r<t;)n[r]="#"+e.slice(6*r,6*++r);return n};oa("1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf"),oa("7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666"),oa("1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666"),oa("a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928"),oa("fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2"),oa("b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc"),oa("e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999"),oa("66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3"),oa("8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f");var ca=function(e){return Ut(e[e.length-1])};ca(new Array(3).concat("d8b365f5f5f55ab4ac","a6611adfc27d80cdc1018571","a6611adfc27df5f5f580cdc1018571","8c510ad8b365f6e8c3c7eae55ab4ac01665e","8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e","8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e","8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e","5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30","5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30").map(oa)),ca(new Array(3).concat("af8dc3f7f7f77fbf7b","7b3294c2a5cfa6dba0008837","7b3294c2a5cff7f7f7a6dba0008837","762a83af8dc3e7d4e8d9f0d37fbf7b1b7837","762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837","762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837","762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837","40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b","40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b").map(oa)),ca(new Array(3).concat("e9a3c9f7f7f7a1d76a","d01c8bf1b6dab8e1864dac26","d01c8bf1b6daf7f7f7b8e1864dac26","c51b7de9a3c9fde0efe6f5d0a1d76a4d9221","c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221","c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221","c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221","8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419","8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419").map(oa)),ca(new Array(3).concat("998ec3f7f7f7f1a340","5e3c99b2abd2fdb863e66101","5e3c99b2abd2f7f7f7fdb863e66101","542788998ec3d8daebfee0b6f1a340b35806","542788998ec3d8daebf7f7f7fee0b6f1a340b35806","5427888073acb2abd2d8daebfee0b6fdb863e08214b35806","5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806","2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08","2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08").map(oa)),ca(new Array(3).concat("ef8a62f7f7f767a9cf","ca0020f4a58292c5de0571b0","ca0020f4a582f7f7f792c5de0571b0","b2182bef8a62fddbc7d1e5f067a9cf2166ac","b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac","b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac","b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac","67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061","67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061").map(oa)),ca(new Array(3).concat("ef8a62ffffff999999","ca0020f4a582bababa404040","ca0020f4a582ffffffbababa404040","b2182bef8a62fddbc7e0e0e09999994d4d4d","b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d","b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d","b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d","67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a","67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a").map(oa)),ca(new Array(3).concat("fc8d59ffffbf91bfdb","d7191cfdae61abd9e92c7bb6","d7191cfdae61ffffbfabd9e92c7bb6","d73027fc8d59fee090e0f3f891bfdb4575b4","d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4","d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4","d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4","a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695","a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695").map(oa)),ca(new Array(3).concat("fc8d59ffffbf91cf60","d7191cfdae61a6d96a1a9641","d7191cfdae61ffffbfa6d96a1a9641","d73027fc8d59fee08bd9ef8b91cf601a9850","d73027fc8d59fee08bffffbfd9ef8b91cf601a9850","d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850","d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850","a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837","a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837").map(oa)),ca(new Array(3).concat("fc8d59ffffbf99d594","d7191cfdae61abdda42b83ba","d7191cfdae61ffffbfabdda42b83ba","d53e4ffc8d59fee08be6f59899d5943288bd","d53e4ffc8d59fee08bffffbfe6f59899d5943288bd","d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd","d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd","9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2","9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2").map(oa));var fa=ca(new Array(3).concat("e5f5f999d8c92ca25f","edf8fbb2e2e266c2a4238b45","edf8fbb2e2e266c2a42ca25f006d2c","edf8fbccece699d8c966c2a42ca25f006d2c","edf8fbccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824","f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b").map(oa));ca(new Array(3).concat("e0ecf49ebcda8856a7","edf8fbb3cde38c96c688419d","edf8fbb3cde38c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68856a7810f7c","edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b","f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b").map(oa)),ca(new Array(3).concat("e0f3dba8ddb543a2ca","f0f9e8bae4bc7bccc42b8cbe","f0f9e8bae4bc7bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc443a2ca0868ac","f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e","f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081").map(oa));var ua=ca(new Array(3).concat("fee8c8fdbb84e34a33","fef0d9fdcc8afc8d59d7301f","fef0d9fdcc8afc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59e34a33b30000","fef0d9fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000","fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000").map(oa));ca(new Array(3).concat("ece2f0a6bddb1c9099","f6eff7bdc9e167a9cf02818a","f6eff7bdc9e167a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf1c9099016c59","f6eff7d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450","fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636").map(oa));var sa=ca(new Array(3).concat("ece7f2a6bddb2b8cbe","f1eef6bdc9e174a9cf0570b0","f1eef6bdc9e174a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d","f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b","fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858").map(oa));ca(new Array(3).concat("e7e1efc994c7dd1c77","f1eef6d7b5d8df65b0ce1256","f1eef6d7b5d8df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0dd1c77980043","f1eef6d4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f","f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f").map(oa)),ca(new Array(3).concat("fde0ddfa9fb5c51b8a","feebe2fbb4b9f768a1ae017e","feebe2fbb4b9f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1c51b8a7a0177","feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177","fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a").map(oa));var da=ca(new Array(3).concat("edf8b17fcdbb2c7fb8","ffffcca1dab441b6c4225ea8","ffffcca1dab441b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c42c7fb8253494","ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84","ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58").map(oa));ca(new Array(3).concat("f7fcb9addd8e31a354","ffffccc2e69978c679238443","ffffccc2e69978c67931a354006837","ffffccd9f0a3addd8e78c67931a354006837","ffffccd9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32","ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529").map(oa)),ca(new Array(3).concat("fff7bcfec44fd95f0e","ffffd4fed98efe9929cc4c02","ffffd4fed98efe9929d95f0e993404","ffffd4fee391fec44ffe9929d95f0e993404","ffffd4fee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04","ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506").map(oa)),ca(new Array(3).concat("ffeda0feb24cf03b20","ffffb2fecc5cfd8d3ce31a1c","ffffb2fecc5cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cf03b20bd0026","ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026","ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026").map(oa));var la=ca(new Array(3).concat("deebf79ecae13182bd","eff3ffbdd7e76baed62171b5","eff3ffbdd7e76baed63182bd08519c","eff3ffc6dbef9ecae16baed63182bd08519c","eff3ffc6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594","f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b").map(oa)),ha=ca(new Array(3).concat("e5f5e0a1d99b31a354","edf8e9bae4b374c476238b45","edf8e9bae4b374c47631a354006d2c","edf8e9c7e9c0a1d99b74c47631a354006d2c","edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32","f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b").map(oa)),ba=ca(new Array(3).concat("f0f0f0bdbdbd636363","f7f7f7cccccc969696525252","f7f7f7cccccc969696636363252525","f7f7f7d9d9d9bdbdbd969696636363252525","f7f7f7d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525","fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000").map(oa)),pa=ca(new Array(3).concat("efedf5bcbddc756bb1","f2f0f7cbc9e29e9ac86a51a3","f2f0f7cbc9e29e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8756bb154278f","f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486","fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d").map(oa)),ga=ca(new Array(3).concat("fee0d2fc9272de2d26","fee5d9fcae91fb6a4acb181d","fee5d9fcae91fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4ade2d26a50f15","fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d","fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d").map(oa)),ma=ca(new Array(3).concat("fee6cefdae6be6550d","feeddefdbe85fd8d3cd94701","feeddefdbe85fd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3ce6550da63603","feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04","fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704").map(oa));nn(kt(300,.5,0),kt(-240,.5,1));nn(kt(-100,.75,.35),kt(80,1.5,.8)),nn(kt(260,.75,.35),kt(80,1.5,.8)),kt();function va(e){var t=e.length;return function(n){return e[Math.max(0,Math.min(t-1,Math.floor(n*t)))]}}va(oa("44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725"));va(oa("00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf")),va(oa("00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4")),va(oa("0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921"));function ya(e=!0){const t=["crimson","palevioletred","deeppink","mediumvioletred","orchid","fuchsia","darkmagenta","darkviolet","indigo","blueviolet","blue","mediumslateblue","darkslateblue","mediumblue","midnightblue","royalblue","dodgerblue","deppskyblue","darkturquoise","steelblue","darkcyan","darkslategray","seagreen","limegreen","darkgreen","mediumspringgreen","darkseagreen","green","olivedrab","darkkhaki","darkolivegreen","yellowgreen","olive","goldenrod","darkgoldenrod","orange","tan","peru","sandybrown","chocolate","saddlebrown","sienna","coral","orangered","tomato","rosybrown","firebrick","indianred","red","brown","gray","black"];return e?function(e){let t=e.length;for(;t>0;){let n=Math.floor(Math.random()*t),r=e[--t];e[t]=e[n],e[n]=r}return e}(t):t}function wa(e,t="YlGnBu",n=0){let r=Math.round(ke(e));const a=function e(t){var n=0,r=1,a=!1;function i(e){var i=(e-n)/(r-n);return t(a?Math.max(0,Math.min(1,i)):i)}return i.domain=function(e){return arguments.length?(n=+e[0],r=+e[1],i):[n,r]},i.clamp=function(e){return arguments.length?(a=!!e,i):a},i.interpolator=function(e){return arguments.length?(t=e,i):t},i.copy=function(){return e(t).domain([n,r]).clamp(a)},An(i)}(function(e){const t={BuGn:fa,OrRd:ua,PuBu:sa,YlGnBu:da,Blues:la,Oranges:ma,Greens:ha,Purples:pa,Reds:ga,Greys:ba,Grays:ba};if(!t.hasOwnProperty(e)){const t="Color Interpolator Error "+e;throw console.error(t),t}return t[e]}(t));return a.domain([n,r]),a}function xa(e,t,n){console.log(e);var r=e.clone().attr("version","1.1").attr("xmlns","http://www.w3.org/2000/svg"),a=function(e){for(var t="",n=document.styleSheets,r=0;r<n.length;r++)try{if(null==n[r].cssRules)continue;for(var a=n[r].cssRules,i=0;i<a.length;i++){var o=a[i];if(void 0!==o.style){var c;try{c=$(e).find(o.selectorText)}catch(e){c=[]}c.length>0&&(t+=o.selectorText+" { "+o.style.cssText+" }\n")}}}catch(e){if("SecurityError"!==e.name)throw e;continue}var f=document.createElement("style");return f.setAttribute("type","text/css"),f.innerHTML="<![CDATA[\n"+t+"\n]]>",f}(e.get());r.prepend(a),$("#"+n).html("").hide();var i=$("#"+n).append(r).html(),o=new Blob([i],{type:"image/svg+xml"});saveAs(o,t),$("#"+n).html("").hide()}class _a{constructor(e="chart"){this.id=e,this.margin={left:10,top:10,right:250,bottom:170},this.cell={w:void 0,h:12},this.topTreePanel={x:100,y:0,h:60,w:window.innerWidth-550,id:"topTree"};this.leftTreePanel={x:this.margin.left,y:this.margin.top+this.topTreePanel.h,h:void 0,w:85,id:"leftTree"},this.heatmapPanel={x:100,y:this.margin.top+this.topTreePanel.h,h:this.leftTreePanel.h,w:this.topTreePanel.w,id:"heatmap"},this.legendPanel={x:100,y:this.margin.top+this.topTreePanel.h+150,h:50,w:this.topTreePanel.w,cell:{w:60},id:"legend"}}setId(e="chart"){this.id=e}setMargin(e={left:10,top:10,right:250,bottom:170}){this.margin=e}setMainPanelWidth(e){this.heatmapPanel.w=e}noTopTreePanel(e=window.innerWidth-350){this.topTreePanel={x:0,y:0,h:20,w:0},this.leftTreePanel.y=2*this.margin.top,this.heatmapPanel.y=2*this.margin.top,this.heatmapPanel.w=e,this.legendPanel.y=0}get(){return{id:this.id,margin:this.margin,cell:this.cell,w:window.innerWidth,h:this.margin.top+this.topTreePanel.h+this.legendPanel.h+this.margin.bottom,panels:{top:this.topTreePanel,left:this.leftTreePanel,main:this.heatmapPanel,legend:this.legendPanel}}}}function Ma(e){var t=0,n=e.children,r=n&&n.length;if(r)for(;--r>=0;)t+=n[r].value;else t=1;e.value=t}function Aa(e,t){var n,r,a,i,o,c=new Pa(e),f=+e.value&&(c.value=e.value),u=[c];for(null==t&&(t=Ta);n=u.pop();)if(f&&(n.value=+n.data.value),(a=t(n.data))&&(o=a.length))for(n.children=new Array(o),i=o-1;i>=0;--i)u.push(r=n.children[i]=new Pa(a[i])),r.parent=n,r.depth=n.depth+1;return c.eachBefore(Ca)}function Ta(e){return e.children}function Sa(e){e.data=e.data.data}function Ca(e){var t=0;do{e.height=t}while((e=e.parent)&&e.height<++t)}function Pa(e){this.data=e,this.depth=this.height=0,this.parent=null}Pa.prototype=Aa.prototype={constructor:Pa,count:function(){return this.eachAfter(Ma)},each:function(e){var t,n,r,a,i=this,o=[i];do{for(t=o.reverse(),o=[];i=t.pop();)if(e(i),n=i.children)for(r=0,a=n.length;r<a;++r)o.push(n[r])}while(o.length);return this},eachAfter:function(e){for(var t,n,r,a=this,i=[a],o=[];a=i.pop();)if(o.push(a),t=a.children)for(n=0,r=t.length;n<r;++n)i.push(t[n]);for(;a=o.pop();)e(a);return this},eachBefore:function(e){for(var t,n,r=this,a=[r];r=a.pop();)if(e(r),t=r.children)for(n=t.length-1;n>=0;--n)a.push(t[n]);return this},sum:function(e){return this.eachAfter(function(t){for(var n=+e(t.data)||0,r=t.children,a=r&&r.length;--a>=0;)n+=r[a].value;t.value=n})},sort:function(e){return this.eachBefore(function(t){t.children&&t.children.sort(e)})},path:function(e){for(var t=this,n=function(e,t){if(e===t)return e;var n=e.ancestors(),r=t.ancestors(),a=null;for(e=n.pop(),t=r.pop();e===t;)a=e,e=n.pop(),t=r.pop();return a}(t,e),r=[t];t!==n;)t=t.parent,r.push(t);for(var a=r.length;e!==n;)r.splice(a,0,e),e=e.parent;return r},ancestors:function(){for(var e=this,t=[e];e=e.parent;)t.push(e);return t},descendants:function(){var e=[];return this.each(function(t){e.push(t)}),e},leaves:function(){var e=[];return this.eachBefore(function(t){t.children||e.push(t)}),e},links:function(){var e=this,t=[];return e.each(function(n){n!==e&&t.push({source:n.parent,target:n})}),t},copy:function(){return Aa(this).eachBefore(Sa)}};var ka=Array.prototype.slice,Ea=function(e){return e},Na=1,La=2,Da=3,Ia=4,$a=1e-6;function Ba(e){return"translate("+(e+.5)+",0)"}function Fa(e){return"translate(0,"+(e+.5)+")"}function Ua(){return!this.__axis}function Ha(e,t){var n=[],r=null,a=null,i=6,o=6,c=3,f=e===Na||e===Ia?-1:1,u=e===Ia||e===La?"x":"y",s=e===Na||e===Da?Ba:Fa;function d(d){var l=null==r?t.ticks?t.ticks.apply(t,n):t.domain():r,h=null==a?t.tickFormat?t.tickFormat.apply(t,n):Ea:a,b=Math.max(i,0)+c,p=t.range(),g=+p[0]+.5,m=+p[p.length-1]+.5,v=(t.bandwidth?function(e){var t=Math.max(0,e.bandwidth()-1)/2;return e.round()&&(t=Math.round(t)),function(n){return+e(n)+t}}:function(e){return function(t){return+e(t)}})(t.copy()),y=d.selection?d.selection():d,w=y.selectAll(".domain").data([null]),x=y.selectAll(".tick").data(l,t).order(),_=x.exit(),M=x.enter().append("g").attr("class","tick"),A=x.select("line"),T=x.select("text");w=w.merge(w.enter().insert("path",".tick").attr("class","domain").attr("stroke","#000")),x=x.merge(M),A=A.merge(M.append("line").attr("stroke","#000").attr(u+"2",f*i)),T=T.merge(M.append("text").attr("fill","#000").attr(u,f*b).attr("dy",e===Na?"0em":e===Da?"0.71em":"0.32em")),d!==y&&(w=w.transition(d),x=x.transition(d),A=A.transition(d),T=T.transition(d),_=_.transition(d).attr("opacity",$a).attr("transform",function(e){return isFinite(e=v(e))?s(e):this.getAttribute("transform")}),M.attr("opacity",$a).attr("transform",function(e){var t=this.parentNode.__axis;return s(t&&isFinite(t=t(e))?t:v(e))})),_.remove(),w.attr("d",e===Ia||e==La?"M"+f*o+","+g+"H0.5V"+m+"H"+f*o:"M"+g+","+f*o+"V0.5H"+m+"V"+f*o),x.attr("opacity",1).attr("transform",function(e){return s(v(e))}),A.attr(u+"2",f*i),T.attr(u,f*b).text(h),y.filter(Ua).attr("fill","none").attr("font-size",10).attr("font-family","sans-serif").attr("text-anchor",e===La?"start":e===Ia?"end":"middle"),y.each(function(){this.__axis=v})}return d.scale=function(e){return arguments.length?(t=e,d):t},d.ticks=function(){return n=ka.call(arguments),d},d.tickArguments=function(e){return arguments.length?(n=null==e?[]:ka.call(e),d):n.slice()},d.tickValues=function(e){return arguments.length?(r=null==e?null:ka.call(e),d):r&&r.slice()},d.tickFormat=function(e){return arguments.length?(a=e,d):a},d.tickSize=function(e){return arguments.length?(i=o=+e,d):i},d.tickSizeInner=function(e){return arguments.length?(i=+e,d):i},d.tickSizeOuter=function(e){return arguments.length?(o=+e,d):o},d.tickPadding=function(e){return arguments.length?(c=+e,d):c},d}const Ra=!1;class Oa{constructor(e,t="h"){this.newick=e,this.orientation=t,this.postorder=[],this.root=Aa(function(e){for(var t=[],n={},r=e.split(/\s*(;|\(|\)|,|:)\s*/),a=0;a<r.length;a++){var i=r[a];switch(i){case"(":var o={};n.branchset=[o],t.push(n),n=o;break;case",":o={},t[t.length-1].branchset.push(o),n=o;break;case")":n=t.pop();break;case":":break;default:var c=r[a-1];")"==c||"("==c||","==c?n.name=i:":"==c&&(n.length=parseFloat(i))}}return n}(e),e=>e.branchset).sum(e=>e.branchset?0:1).sort((e,t)=>e.value-t.value||e.data.length-t.data.length),this.leaves=this.root.leaves().sort((e,t)=>e.value-t.value||ye(e.data.length,t.data.length)),this.width=void 0,this.height=void 0,this.xScale=void 0,this.yScale=void 0}draw(e,t,n){this.width=t,this.height=n,this._setXScale(),this._setYScale(),"h"==this.orientation?this._drawHTree(e):this._drawVTree(e)}_drawHTree(e){const t=e=>{void 0===e.children?e.y=this.yScale(e.data.name):e.y=e.children.reduce((e,t)=>e+t.y,0)/e.children.length},n=e=>{e.x=this.xScale(this._getBranchLengthToRoot(e))},r=this._sortNodesByLevel();r.forEach(e=>{n(e),t(e)}),e.selectAll(".branch").data(r).enter().append("line").attr("x1",e=>e.x).attr("x2",e=>e.data.length?e.x-this.xScale(e.data.length):e.x).attr("y1",e=>e.y+this.yScale.bandwidth()/2).attr("y2",e=>e.y+this.yScale.bandwidth()/2).attr("stroke","gray").attr("stroke-width",1);const a=this.root.descendants().filter(e=>e.height).sort((e,t)=>t.height-e.height);var i;e.selectAll(".arm").data(a).enter().append("line").attr("x1",e=>e.x).attr("x2",e=>e.x).attr("y1",e=>e.children[0].y+this.yScale.bandwidth()/2).attr("y2",e=>e.children[1].y+this.yScale.bandwidth()/2).attr("stroke","gray").attr("stroke-width",1),e.selectAll(".node").data(a).enter().append("circle").attr("cx",e=>e.x).attr("cy",e=>e.y+this.yScale.bandwidth()/2).attr("r",2).attr("fill","#333").attr("opacity",.5).attr("class","dendrogram-node").on("mouseover",function(e){d3.select(this).attr("r",3),console.log(e.leaves())}).on("mouseout",function(e){d3.select(this).attr("r",2)}),e.append("g").attr("class","dendrogram-axis").attr("transform","translate(0,"+this.height+")").call((i=this.xScale,Ha(Da,i)).ticks(3))}_sortNodesByLevel(){return this.root.descendants().sort((e,t)=>e.height-t.height||ye(e.data.length,t.data.length))}_drawVTree(e){const t=e=>{void 0===e.children?e.x=this.xScale(e.data.name):e.x=e.children.reduce((e,t)=>e+t.x,0)/e.children.length},n=e=>{e.y=this.yScale(this._getBranchLengthToRoot(e))},r=this._sortNodesByLevel();r.forEach(e=>{t(e),n(e)}),e.selectAll(".branch").data(r).enter().append("line").attr("y1",e=>e.y).attr("y2",e=>e.data.length?e.y-this.yScale(e.data.length):e.y).attr("x1",e=>e.x+this.xScale.bandwidth()/2).attr("x2",e=>e.x+this.xScale.bandwidth()/2).attr("stroke","gray").attr("stroke-width",1);const a=this.root.descendants().filter(e=>e.height).sort((e,t)=>t.height-e.height);var i;e.selectAll(".arm").data(a).enter().append("line").attr("y1",e=>e.y).attr("y2",e=>e.y).attr("x1",e=>e.children[0].x+this.xScale.bandwidth()/2).attr("x2",e=>e.children[1].x+this.xScale.bandwidth()/2).attr("stroke","gray").attr("stroke-width",1),e.selectAll(".node").data(a).enter().append("circle").attr("cx",e=>e.x+this.xScale.bandwidth()/2).attr("cy",e=>e.y).attr("r",2).attr("fill","#333").attr("opacity",.5).attr("class","dendrogram-node").on("mouseover",function(e){d3.select(this).attr("r",3),console.log(e.leaves())}).on("mouseout",function(e){d3.select(this).attr("r",2)}),e.append("g").attr("class","dendrogram-axis").call((i=this.yScale,Ha(Ia,i)).tickValues([Math.floor(this._getMaxBranchLength()/2),Math.floor(this._getMaxBranchLength())]))}_getBranchLengthToRoot(e){return e.path(this.root).reduce((e,t)=>t.data.length?e+t.data.length:e,0)}_getMaxBranchLength(){let e=this.leaves[0];return this._getBranchLengthToRoot(e)}_assignPostorder(e){return void 0===e.children?void this.postorder.push(e):(this._assignPostorder(e.children[0]),void this._assignPostorder(e.children[1]))}_setXScale(){"h"==this.orientation?this.xScale=Tn().domain([0,this._getMaxBranchLength()]).range([0,this.width]):(this._assignPostorder(this.root),Ra&&console.log(this.postorder),this.xScale=Ie().domain(this.postorder.map(e=>e.data.name)).range([0,this.width]).padding(.05))}_setYScale(){"h"==this.orientation?(this._assignPostorder(this.root),Ra&&console.log(this.postorder),this.yScale=Ie().domain(this.postorder.map(e=>e.data.name)).range([0,this.height]).padding(.05)):this.yScale=Tn().domain([0,this._getMaxBranchLength()]).range([0,this.height])}}var Ya={value:function(){}};function ja(){for(var e,t=0,n=arguments.length,r={};t<n;++t){if(!(e=arguments[t]+"")||e in r)throw new Error("illegal type: "+e);r[e]=[]}return new Ga(r)}function Ga(e){this._=e}function Va(e,t){for(var n,r=0,a=e.length;r<a;++r)if((n=e[r]).name===t)return n.value}function Xa(e,t,n){for(var r=0,a=e.length;r<a;++r)if(e[r].name===t){e[r]=Ya,e=e.slice(0,r).concat(e.slice(r+1));break}return null!=n&&e.push({name:t,value:n}),e}Ga.prototype=ja.prototype={constructor:Ga,on:function(e,t){var n,r,a=this._,i=(r=a,(e+"").trim().split(/^|\s+/).map(function(e){var t="",n=e.indexOf(".");if(n>=0&&(t=e.slice(n+1),e=e.slice(0,n)),e&&!r.hasOwnProperty(e))throw new Error("unknown type: "+e);return{type:e,name:t}})),o=-1,c=i.length;if(!(arguments.length<2)){if(null!=t&&"function"!=typeof t)throw new Error("invalid callback: "+t);for(;++o<c;)if(n=(e=i[o]).type)a[n]=Xa(a[n],e.name,t);else if(null==t)for(n in a)a[n]=Xa(a[n],e.name,null);return this}for(;++o<c;)if((n=(e=i[o]).type)&&(n=Va(a[n],e.name)))return n},copy:function(){var e={},t=this._;for(var n in t)e[n]=t[n].slice();return new Ga(e)},call:function(e,t){if((n=arguments.length-2)>0)for(var n,r,a=new Array(n),i=0;i<n;++i)a[i]=arguments[i+2];if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(i=0,n=(r=this._[e]).length;i<n;++i)r[i].value.apply(t,a)},apply:function(e,t,n){if(!this._.hasOwnProperty(e))throw new Error("unknown type: "+e);for(var r=this._[e],a=0,i=r.length;a<i;++a)r[a].value.apply(t,n)}};var qa,za,Wa=0,Za=0,Ja=0,Qa=1e3,Ka=0,ei=0,ti=0,ni="object"==typeof performance&&performance.now?performance:Date,ri="object"==typeof window&&window.requestAnimationFrame?window.requestAnimationFrame.bind(window):function(e){setTimeout(e,17)};function ai(){return ei||(ri(ii),ei=ni.now()+ti)}function ii(){ei=0}function oi(){this._call=this._time=this._next=null}function ci(e,t,n){var r=new oi;return r.restart(e,t,n),r}function fi(){ei=(Ka=ni.now())+ti,Wa=Za=0;try{!function(){ai(),++Wa;for(var e,t=qa;t;)(e=ei-t._time)>=0&&t._call.call(null,e),t=t._next;--Wa}()}finally{Wa=0,function(){var e,t,n=qa,r=1/0;for(;n;)n._call?(r>n._time&&(r=n._time),e=n,n=n._next):(t=n._next,n._next=null,n=e?e._next=t:qa=t);za=e,si(r)}(),ei=0}}function ui(){var e=ni.now(),t=e-Ka;t>Qa&&(ti-=t,Ka=e)}function si(e){Wa||(Za&&(Za=clearTimeout(Za)),e-ei>24?(e<1/0&&(Za=setTimeout(fi,e-ni.now()-ti)),Ja&&(Ja=clearInterval(Ja))):(Ja||(Ka=ni.now(),Ja=setInterval(ui,Qa)),Wa=1,ri(fi)))}oi.prototype=ci.prototype={constructor:oi,restart:function(e,t,n){if("function"!=typeof e)throw new TypeError("callback is not a function");n=(null==n?ai():+n)+(null==t?0:+t),this._next||za===this||(za?za._next=this:qa=this,za=this),this._call=e,this._time=n,si()},stop:function(){this._call&&(this._call=null,this._time=1/0,si())}};var di=function(e,t,n){var r=new oi;return t=null==t?0:+t,r.restart(function(n){r.stop(),e(n+t)},t,n),r},li=ja("start","end","interrupt"),hi=[],bi=0,pi=1,gi=2,mi=3,vi=4,yi=5,wi=6,xi=function(e,t,n,r,a,i){var o=e.__transition;if(o){if(n in o)return}else e.__transition={};!function(e,t,n){var r,a=e.__transition;function i(f){var u,s,d,l;if(n.state!==pi)return c();for(u in a)if((l=a[u]).name===n.name){if(l.state===mi)return di(i);l.state===vi?(l.state=wi,l.timer.stop(),l.on.call("interrupt",e,e.__data__,l.index,l.group),delete a[u]):+u<t&&(l.state=wi,l.timer.stop(),delete a[u])}if(di(function(){n.state===mi&&(n.state=vi,n.timer.restart(o,n.delay,n.time),o(f))}),n.state=gi,n.on.call("start",e,e.__data__,n.index,n.group),n.state===gi){for(n.state=mi,r=new Array(d=n.tween.length),u=0,s=-1;u<d;++u)(l=n.tween[u].value.call(e,e.__data__,n.index,n.group))&&(r[++s]=l);r.length=s+1}}function o(t){for(var a=t<n.duration?n.ease.call(null,t/n.duration):(n.timer.restart(c),n.state=yi,1),i=-1,o=r.length;++i<o;)r[i].call(null,a);n.state===yi&&(n.on.call("end",e,e.__data__,n.index,n.group),c())}function c(){for(var r in n.state=wi,n.timer.stop(),delete a[t],a)return;delete e.__transition}a[t]=n,n.timer=ci(function(e){n.state=pi,n.timer.restart(i,n.delay,n.time),n.delay<=e&&i(e-n.delay)},0,n.time)}(e,n,{name:t,index:r,group:a,on:li,tween:hi,time:i.time,delay:i.delay,duration:i.duration,ease:i.ease,timer:null,state:bi})};function _i(e,t){var n=Ai(e,t);if(n.state>bi)throw new Error("too late; already scheduled");return n}function Mi(e,t){var n=Ai(e,t);if(n.state>gi)throw new Error("too late; already started");return n}function Ai(e,t){var n=e.__transition;if(!n||!(n=n[t]))throw new Error("transition not found");return n}function Ti(e,t,n){var r=e._id;return e.each(function(){var e=Mi(this,r);(e.value||(e.value={}))[t]=n.apply(this,arguments)}),function(e){return Ai(e,r).value[t]}}var Si=function(e,t){var n;return("number"==typeof t?Ht:t instanceof Ze?Bt:(n=Ze(t))?(t=n,Bt):Xt)(e,t)};var Ci=ie.prototype.constructor;var Pi=0;function ki(e,t,n,r){this._groups=e,this._parents=t,this._name=n,this._id=r}function Ei(){return++Pi}var Ni=ie.prototype;ki.prototype=function(e){return ie().transition(e)}.prototype={constructor:ki,select:function(e){var t=this._name,n=this._id;"function"!=typeof e&&(e=x(e));for(var r=this._groups,a=r.length,i=new Array(a),o=0;o<a;++o)for(var c,f,u=r[o],s=u.length,d=i[o]=new Array(s),l=0;l<s;++l)(c=u[l])&&(f=e.call(c,c.__data__,l,u))&&("__data__"in c&&(f.__data__=c.__data__),d[l]=f,xi(d[l],t,n,l,d,Ai(c,n)));return new ki(i,this._parents,t,n)},selectAll:function(e){var t=this._name,n=this._id;"function"!=typeof e&&(e=M(e));for(var r=this._groups,a=r.length,i=[],o=[],c=0;c<a;++c)for(var f,u=r[c],s=u.length,d=0;d<s;++d)if(f=u[d]){for(var l,h=e.call(f,f.__data__,d,u),b=Ai(f,n),p=0,g=h.length;p<g;++p)(l=h[p])&&xi(l,t,n,p,h,b);i.push(h),o.push(f)}return new ki(i,o,t,n)},filter:function(e){"function"!=typeof e&&(e=C(e));for(var t=this._groups,n=t.length,r=new Array(n),a=0;a<n;++a)for(var i,o=t[a],c=o.length,f=r[a]=[],u=0;u<c;++u)(i=o[u])&&e.call(i,i.__data__,u,o)&&f.push(i);return new ki(r,this._parents,this._name,this._id)},merge:function(e){if(e._id!==this._id)throw new Error;for(var t=this._groups,n=e._groups,r=t.length,a=n.length,i=Math.min(r,a),o=new Array(r),c=0;c<i;++c)for(var f,u=t[c],s=n[c],d=u.length,l=o[c]=new Array(d),h=0;h<d;++h)(f=u[h]||s[h])&&(l[h]=f);for(;c<r;++c)o[c]=t[c];return new ki(o,this._parents,this._name,this._id)},selection:function(){return new Ci(this._groups,this._parents)},transition:function(){for(var e=this._name,t=this._id,n=Ei(),r=this._groups,a=r.length,i=0;i<a;++i)for(var o,c=r[i],f=c.length,u=0;u<f;++u)if(o=c[u]){var s=Ai(o,t);xi(o,e,n,u,c,{time:s.time+s.delay+s.duration,delay:0,duration:s.duration,ease:s.ease})}return new ki(r,this._parents,e,n)},call:Ni.call,nodes:Ni.nodes,node:Ni.node,size:Ni.size,empty:Ni.empty,each:Ni.each,on:function(e,t){var n=this._id;return arguments.length<2?Ai(this.node(),n).on.on(e):this.each(function(e,t,n){var r,a,i=function(e){return(e+"").trim().split(/^|\s+/).every(function(e){var t=e.indexOf(".");return t>=0&&(e=e.slice(0,t)),!e||"start"===e})}(t)?_i:Mi;return function(){var o=i(this,e),c=o.on;c!==r&&(a=(r=c).copy()).on(t,n),o.on=a}}(n,e,t))},attr:function(e,t){var n=v(e),r="transform"===n?en:Si;return this.attrTween(e,"function"==typeof t?(n.local?function(e,t,n){var r,a,i;return function(){var o,c=n(this);if(null!=c)return(o=this.getAttributeNS(e.space,e.local))===c?null:o===r&&c===a?i:i=t(r=o,a=c);this.removeAttributeNS(e.space,e.local)}}:function(e,t,n){var r,a,i;return function(){var o,c=n(this);if(null!=c)return(o=this.getAttribute(e))===c?null:o===r&&c===a?i:i=t(r=o,a=c);this.removeAttribute(e)}})(n,r,Ti(this,"attr."+e,t)):null==t?(n.local?function(e){return function(){this.removeAttributeNS(e.space,e.local)}}:function(e){return function(){this.removeAttribute(e)}})(n):(n.local?function(e,t,n){var r,a;return function(){var i=this.getAttributeNS(e.space,e.local);return i===n?null:i===r?a:a=t(r=i,n)}}:function(e,t,n){var r,a;return function(){var i=this.getAttribute(e);return i===n?null:i===r?a:a=t(r=i,n)}})(n,r,t+""))},attrTween:function(e,t){var n="attr."+e;if(arguments.length<2)return(n=this.tween(n))&&n._value;if(null==t)return this.tween(n,null);if("function"!=typeof t)throw new Error;var r=v(e);return this.tween(n,(r.local?function(e,t){function n(){var n=this,r=t.apply(n,arguments);return r&&function(t){n.setAttributeNS(e.space,e.local,r(t))}}return n._value=t,n}:function(e,t){function n(){var n=this,r=t.apply(n,arguments);return r&&function(t){n.setAttribute(e,r(t))}}return n._value=t,n})(r,t))},style:function(e,t,n){var r="transform"==(e+="")?Kt:Si;return null==t?this.styleTween(e,function(e,t){var n,r,a;return function(){var i=B(this,e),o=(this.style.removeProperty(e),B(this,e));return i===o?null:i===n&&o===r?a:a=t(n=i,r=o)}}(e,r)).on("end.style."+e,function(e){return function(){this.style.removeProperty(e)}}(e)):this.styleTween(e,"function"==typeof t?function(e,t,n){var r,a,i;return function(){var o=B(this,e),c=n(this);return null==c&&(this.style.removeProperty(e),c=B(this,e)),o===c?null:o===r&&c===a?i:i=t(r=o,a=c)}}(e,r,Ti(this,"style."+e,t)):function(e,t,n){var r,a;return function(){var i=B(this,e);return i===n?null:i===r?a:a=t(r=i,n)}}(e,r,t+""),n)},styleTween:function(e,t,n){var r="style."+(e+="");if(arguments.length<2)return(r=this.tween(r))&&r._value;if(null==t)return this.tween(r,null);if("function"!=typeof t)throw new Error;return this.tween(r,function(e,t,n){function r(){var r=this,a=t.apply(r,arguments);return a&&function(t){r.style.setProperty(e,a(t),n)}}return r._value=t,r}(e,t,null==n?"":n))},text:function(e){return this.tween("text","function"==typeof e?function(e){return function(){var t=e(this);this.textContent=null==t?"":t}}(Ti(this,"text",e)):function(e){return function(){this.textContent=e}}(null==e?"":e+""))},remove:function(){return this.on("end.remove",(e=this._id,function(){var t=this.parentNode;for(var n in this.__transition)if(+n!==e)return;t&&t.removeChild(this)}));var e},tween:function(e,t){var n=this._id;if(e+="",arguments.length<2){for(var r,a=Ai(this.node(),n).tween,i=0,o=a.length;i<o;++i)if((r=a[i]).name===e)return r.value;return null}return this.each((null==t?function(e,t){var n,r;return function(){var a=Mi(this,e),i=a.tween;if(i!==n)for(var o=0,c=(r=n=i).length;o<c;++o)if(r[o].name===t){(r=r.slice()).splice(o,1);break}a.tween=r}}:function(e,t,n){var r,a;if("function"!=typeof n)throw new Error;return function(){var i=Mi(this,e),o=i.tween;if(o!==r){a=(r=o).slice();for(var c={name:t,value:n},f=0,u=a.length;f<u;++f)if(a[f].name===t){a[f]=c;break}f===u&&a.push(c)}i.tween=a}})(n,e,t))},delay:function(e){var t=this._id;return arguments.length?this.each(("function"==typeof e?function(e,t){return function(){_i(this,e).delay=+t.apply(this,arguments)}}:function(e,t){return t=+t,function(){_i(this,e).delay=t}})(t,e)):Ai(this.node(),t).delay},duration:function(e){var t=this._id;return arguments.length?this.each(("function"==typeof e?function(e,t){return function(){Mi(this,e).duration=+t.apply(this,arguments)}}:function(e,t){return t=+t,function(){Mi(this,e).duration=t}})(t,e)):Ai(this.node(),t).duration},ease:function(e){var t=this._id;return arguments.length?this.each(function(e,t){if("function"!=typeof t)throw new Error;return function(){Mi(this,e).ease=t}}(t,e)):Ai(this.node(),t).ease}};var Li={time:null,delay:0,duration:250,ease:function(e){return((e*=2)<=1?e*e*e:(e-=2)*e*e+2)/2}};function Di(e,t){for(var n;!(n=e.__transition)||!(n=n[t]);)if(!(e=e.parentNode))return Li.time=ai(),Li;return n}ie.prototype.interrupt=function(e){return this.each(function(){!function(e,t){var n,r,a,i=e.__transition,o=!0;if(i){for(a in t=null==t?null:t+"",i)(n=i[a]).name===t?(r=n.state>gi&&n.state<yi,n.state=wi,n.timer.stop(),r&&n.on.call("interrupt",e,e.__data__,n.index,n.group),delete i[a]):o=!1;o&&delete e.__transition}}(this,e)})},ie.prototype.transition=function(e){var t,n;e instanceof ki?(t=e._id,e=e._name):(t=Ei(),(n=Li).time=ai(),e=null==e?null:e+"");for(var r=this._groups,a=r.length,i=0;i<a;++i)for(var o,c=r[i],f=c.length,u=0;u<f;++u)(o=c[u])&&xi(o,e,t,u,c,n||Di(o,t));return new ki(r,this._parents,e,t)};class Ii{constructor(e,t=!0,n="YlGnBu",r=2){this.data=e,this.useLog=t,this.nullColor="#e6e6e6",this.colorScale=void 0,this.xList=void 0,this.yList=void 0,this.xScale=void 0,this.yScale=void 0,this.r=r,this.colorScheme=n}redraw(e,t,n,r={w:1e3,h:1e3},a=30){this._setXList(r.w,t),this._setYList(r.h,n),this.draw(e,r,a)}drawColorLegend(e,t={x:0,y:0},n=10){!function(e,t,n,r,a,i=10,o=10,c={h:15,w:50}){const f=n.ticks(i).slice(1);t.append("text").attr("class","color-legend").text(e).attr("x",-10).attr("text-anchor","end").attr("y",c.h).attr("transform",`translate(${r.x}, ${r.y})`);const u=t.append("g").attr("transform",`translate(${r.x}, ${r.y})`).selectAll(".legend").data(f).enter().append("g").classed("legend",!0);u.append("rect").attr("x",(e,t)=>c.w*t).attr("y",5).attr("width",c.w).attr("height",c.h).style("fill",n),u.append("text").attr("class","color-legend").text(e=>a?(Math.pow(o,e)-1).toPrecision(2):e.toPrecision(2)).attr("x",(e,t)=>c.w*t).attr("y",0)}(this.data[0].unit||"Value",e,this.colorScale,t,this.useLog,n)}draw(e,t={w:1e3,h:600},n=30,r=!0){void 0===this.xList&&this._setXList(t.w),void 0===this.yList&&this._setYList(t.h),void 0===this.colorScale&&(this.colorScale=wa(this.data.map(e=>e.value),this.colorScheme));const a=e.selectAll(".exp-map-xlabel").data(this.xList),i=this.yScale.range()[1]+2*this.yScale.bandwidth();a.attr("transform",e=>{return`translate(${this.xScale(e)+5}, ${i}) rotate(${n})`}),a.enter().append("text").attr("class",(e,t)=>`exp-map-xlabel x${t}`).attr("x",0).attr("y",0).style("cursor","pointer").style("text-anchor","start").attr("transform",e=>{return`translate(${this.xScale(e)+5}, ${i}) rotate(${n})`}).merge(a).text(e=>e),a.exit().remove();e.selectAll(".exp-map-ylabel").data(this.yList).enter().append("text").text(e=>e).attr("x",this.xScale.range()[1]+5).attr("y",e=>this.yScale(e)+10).attr("class",(e,t)=>`exp-map-ylabel y${t}`).style("cursor","pointer").style("text-anchor","start").on("click",e=>{alert(`${e} is clicked. To be implemented`)}).on("mouseover",function(e){oe(this).classed("normal",!1).classed("highlighted",!0)}).on("mouseout",function(e){oe(this).classed("normal",!0).classed("highlighted",!1)});const o=e.selectAll(".exp-map-cell").data(this.data,e=>e.value);o.attr("x",e=>this.xScale(e.x)).attr("y",e=>this.yScale(e.y)).attr("row",e=>`x${this.xList.indexOf(e.x)}`).attr("col",e=>`y${this.yList.indexOf(e.y)}`);const c=this;o.enter().append("rect").attr("row",e=>`x${this.xList.indexOf(e.x)}`).attr("col",e=>`y${this.yList.indexOf(e.y)}`).attr("x",e=>this.xScale(e.x)).attr("y",e=>this.yScale(e.y)).attr("rx",this.r).attr("ry",this.r).attr("class",e=>"exp-map-cell").attr("width",this.xScale.bandwidth()).attr("height",this.yScale.bandwidth()).style("fill",e=>"#eeeeee").on("mouseover",function(e){const t=oe(this);c.cellMouseover(t)}).on("mouseout",function(e){oe(this);c.cellMouseout()}).merge(o).style("fill",e=>r&&0==e.originalValue?"#DDDDDD":this.colorScale(e.value)),o.exit().remove()}cellMouseout(e){ce("*").classed("highlighted",!1)}cellMouseover(e){const t=e.attr("row"),n=e.attr("col");ce(".exp-map-xlabel").filter(`.${t}`).classed("highlighted",!0),ce(".exp-map-ylabel").filter(`.${n}`).classed("highlighted",!0),e.classed("highlighted",!0)}_setXList(e,t){this.xList=void 0!==t?t:se().key(e=>e.x).entries(this.data).map(e=>e.key),this.xScale=Ie().domain(this.xList).range([0,e]).padding(.05)}_setYList(e,t){this.yList=void 0!==t?t:se().key(e=>e.y).entries(this.data).map(e=>e.key),this.yScale=Ie().domain(this.yList).range([0,e]).padding(.05)}}class $i{constructor(e,t=!1,n=30,r=-40,a=500){this.id=e,this.verbose=t,this.offsetX=n,this.offsetY=r,this.duration=a}show(e){this.verbose&&console.log(e),this.edit(e),this.move(),oe("#"+this.id).style("display","inline").transition().duration(this.duration).style("opacity",1)}hide(){oe("#"+this.id).transition().duration(this.duration).style("opacity",0),this.edit("")}move(e=J.pageX,t=J.pageY){this.verbose&&(console.log(e),console.log(t)),e+=this.offsetX,t=t+this.offsetY<0?10:t+this.offsetY;oe("#"+this.id).style("left",`${e}px`).style("top",`${t}px`)}edit(e){oe("#"+this.id).html(e)}}class Bi{constructor(e,t,n,r="YlGnBu",a=2,i=new _a,o=!0){this.config=i.get(),e=void 0===e||e.startsWith("Not enough data")?void 0:e,t=void 0===t||t.startsWith("Not enough data")?void 0:t,this.data={columnTree:e,rowTree:t,heatmap:n,external:void 0},this.objects={columnTree:void 0===this.data.columnTree?void 0:new Oa(this.data.columnTree,"v"),rowTree:void 0===this.data.rowTree?void 0:new Oa(this.data.rowTree,"h"),heatmap:new Ii(this.data.heatmap,o,r,a)},this.visualComponents={tooltip:new $i("tooltip",!1),svg:void 0,columnTree:void 0,rowTree:void 0}}render(e,t=!0,n=!0,r="bottom",a=10){var i,o,c,f;this._updateConfig(r),this.visualComponents.svg=(i=e,o=this.config.w,c=this.config.h,f=this.config.margin,oe("#"+i).append("svg").attr("width",o).attr("height",c).append("g").attr("transform",`translate(${f.left}, ${f.top})`));let u=void 0,s=void 0;t&&void 0!==this.objects.columnTree&&(this.visualComponents.columnTree=this._renderTree(this.objects.columnTree,this.config.panels.top),u=this.objects.columnTree.xScale.domain()),n&&void 0!==this.objects.rowTree&&(this.visualComponents.rowTree=this._renderTree(this.objects.rowTree,this.config.panels.left),s=this.objects.rowTree.yScale.domain()),this._renderHeatmap(this.objects.heatmap,u,s,a)}_renderTree(e,t){let n=this.visualComponents.svg;const r=this.visualComponents.tooltip,a=n.append("g").attr("id",t.id).attr("transform",`translate(${t.x}, ${t.y})`);e.draw(a,t.w,t.h);return a.selectAll(".dendrogram-node").on("mouseover",function(e){oe(this).attr("r",6).attr("fill","red");const t=e.leaves().map(e=>e.data.name);r.show(`${t.join("<br>")}`)}).on("mouseout",function(e){oe(this).attr("r",2).attr("fill","#333"),r.hide()}),a}_renderHeatmap(e,t,n,r=10){let a=this.visualComponents.svg;const i=this.config.panels.main,o=a.append("g").attr("id",i.id).attr("transform",`translate(${i.x}, ${i.y})`);e.redraw(o,t,n,{w:i.w,h:i.h}),e.drawColorLegend(a,this.config.panels.legend,r)}_updateConfig(e){const t=void 0===this.objects.rowTree?1:this.objects.rowTree.leaves.length;this.config.panels.left.h=this.config.cell.h*t<20?20:this.config.cell.h*t,"bottom"==e&&(this.config.panels.legend.y+=this.config.panels.left.h),this.config.h+=this.config.panels.left.h,this.config.panels.main.h=this.config.panels.left.h}}function Fi(e){e.forEach(e=>{$(`#${e}`).empty()})}function Ui(e,t,n,r,a=me(),i=!0){const o=i?a.topInTissueFiltered:a.topInTissue;p(o+e).then(function(o){Hi(o.topExpressedGene.map(e=>e.gencodeId),[e],t,n,r,a,i,function(){Ri(e)})}).catch(function(e){console.error(e)})}function Hi(e,t,n,r,a,i=me(),o,c){if(Fi([n,r,a,"boxplot"]),$("#spinner").show(),oe(`#${n}`).empty())throw`Fatal Error: DOM element with id ${n} does not exist;`;let f="";Promise.all([p(i.tissue),p(i.geneId+e.join(","))]).then(function(u){const s=ve(u[0]);if(!u[1].hasOwnProperty("geneId"))throw"gene web service parsing error";let d=u[1].geneId;if(0==d.length)f="Fatal Error: the gene list is empty.<br/>";else{if(d.length<e.length){const t=[];d.forEach(e=>{t.push(e.gencodeId),t.push(e.geneSymbolUpper),t.push(e.ensemblId)});const n=e.filter(e=>!t.includes(e));f=`Warning: Not all genes are found: ${n.join(",")}<br/>`}d.length>50&&(f+="Warning: Too many genes. Input list truncated to the first 50.<br/>",d=d.slice(0,50));const u=d.map(e=>e.gencodeId);p(i.medExpById+u.join(",")).then(function(e){const d=e.clusters.tissue,l=e.clusters.gene,h=function(e,t=!0){const n="medianGeneExpression";if(!e.hasOwnProperty(n))throw"parseMedianExpression input error.";return e.medianGeneExpression.forEach(function(e){e.value=t?Math.log10(Number(e.median)+1):Number(e.median),e.x=e.tissueId,e.y=e.gencodeId,e.originalValue=Number(e.median),e.id=e.gencodeId}),e[n]}(e),b=new Bi(d,l,h);u.length<3?b.render(n,!0,!1):b.render(n),$("#spinner").hide();const p=s.reduce((e,t)=>{if(!t.hasOwnProperty("tissueId"))throw"tissue has not attr tissue_id";return e[t.tissueId]=t,e},{}),g=b.data.heatmap.reduce((e,t,n)=>{if(!t.hasOwnProperty("gencodeId"))throw"gene has no attr gencodeId";return e[t.gencodeId]=t,e},{});Oi(b,p,g),Yi(b,p),ji(b,p,g),Gi(n,r,a,b,p,t,i,o),void 0!==o&&(f+=o?"Mitochondrial genes are excluded.":"Mitochondrial genes are included"),$(`#${a}`).html(f),void 0!==c&&c()}).catch(function(e){console.error(e)})}}).catch(function(e){throw e})}function Ri(e){ce(".exp-map-xlabel").filter(t=>t==e).classed("query",!0)}function Oi(e,t,n){oe("#"+e.config.panels.main.id).selectAll(".exp-map-xlabel").text(e=>void 0===t[e]?e:t[e].tissueName),oe("#"+e.config.panels.main.id).selectAll(".exp-map-ylabel").text(e=>void 0===n[e]?e:n[e].geneSymbol)}function Yi(e,t){const n=e.config.panels.main.id,r=e.objects.heatmap;let a=oe(`#${n}`).selectAll(".exp-map-xcolor").data(r.xList);a.attr("x",e=>r.xScale(e)).attr("y",e=>r.yScale.range()[1]+5),a.enter().append("rect").attr("x",e=>r.xScale(e)).attr("y",e=>r.yScale.range()[1]+5).attr("width",r.xScale.bandwidth()).attr("height",.5*r.yScale.bandwidth()).classed("exp-map-xcolor",!0).merge(a).style("fill",e=>void 0===t[e]?"#000000":`#${t[e].colorHex}`),a.exit().remove()}function ji(e,t,n){const r=e.visualComponents.svg,a=e.visualComponents.tooltip,i=ya();pe(n).forEach((e,t)=>{n[e].color=i[t]});const o=function(e){return function(t){oe(this).attr("r",6).attr("fill","red");const n=t.leaves().map(e=>e.data.name);r.selectAll(e).filter(e=>n.includes(e)).classed("highlighted",!0)}},c=function(e){return function(t){oe(this).attr("r",2).attr("fill","#333"),r.selectAll(e).classed("highlighted",!1)}};void 0!==e.visualComponents.columnTree&&e.visualComponents.columnTree.selectAll(".dendrogram-node").on("mouseover",o(".exp-map-xlabel")).on("mouseout",c(".exp-map-xlabel")),void 0!==e.visualComponents.rowTree&&e.visualComponents.rowTree.selectAll(".dendrogram-node").on("mouseover",o(".exp-map-ylabel")).on("mouseout",c(".exp-map-ylabel")),r.selectAll(".exp-map-cell").on("mouseover",function(r){const i=oe(this);e.objects.heatmap.cellMouseover(i);let o=void 0===t[r.x]?r.x:t[r.x].tissueName,c=void 0===n[r.y]?r.y:n[r.y].geneSymbol;a.show(`Tissue: ${o}<br/> Gene: ${c}<br/> Median TPM: ${parseFloat(r.originalValue.toExponential()).toPrecision(4)}`)}).on("mouseout",function(e){r.selectAll("*").classed("highlighted",!1),a.hide()}),r.selectAll(".exp-map-ylabel").on("click",function(r){let a=oe(this),i="";J.altKey?(a.classed("clicked")||a.classed("clicked",!0),i="add"):a.classed("clicked")?(a.classed("clicked",!1),i="delete"):(ce(".clicked").classed("clicked",!1),a.classed("clicked",!0),e.data.external={},i="add"),function(e,t,n,r,a){let i=a.objects.heatmap.xScale.domain().map((e,t)=>({id:e,name:r[e].tissueName})),o=a.data.external;const c={useLog:!1,id:"boxplot"},f={title:"",font:{family:"Open Sans, Helvetica, sans-serif",size:11},yaxis:{title:"TPM",zeroline:!1,tickfont:{size:9}},xaxis:{tickfont:{size:9},tickangle:30},boxmode:"group",margin:{t:0},showlegend:!0};switch(e){case"delete":delete o[t],Plotly.newPlot(c.id,ge(o),f),0==pe(o).length?oe("#"+c.id).style("opacity",0):oe("#"+c.id).style("opacity",1);break;case"add":{const e=me().geneExp+t;p(e).then(function(e){let r=n[t].color||"black";o[t]=function(e,t,n=!1,r="grey",a){let i=function(e,t){let n={exp:{},geneSymbol:""};return t.geneExpression.forEach(t=>{t.gencodeId==e&&(n.exp[t.tissueId]=t.data,""==n.geneSymbol&&(n.geneSymbol=t.geneSymbol))}),n}(e,t),o=[],c=[];return a.forEach(e=>{void 0===i.exp[e.id]?(o=o.concat([e.name]),c=c.concat([-1])):(o=o.concat(Array(i.exp[e.id].length).fill(e.name)),c=c.concat(i.exp[e.id]))}),{x:o,y:c,name:i.geneSymbol,type:"box",line:{width:1},marker:{color:r}}}(t,e,c.useLog,r,i),Plotly.newPlot(c.id,ge(o),f),oe("#"+c.id).style("opacity",1)}).catch(function(e){console.error(e)});break}default:console.warn("action not understood.")}}(i,r,n,t,e)})}function Gi(e,t,n,r,a,i,o=me(),c){$(`#${t}`).show();let f=$("<div/>").addClass("btn-group btn-group-sm").appendTo(`#${t}`);if(void 0!==c){const a="filterOptions";let u=$("<a/>").attr("id",a).addClass("btn btn-default").appendTo(f);$("<i/>").addClass("fa fa-filter").appendTo(u),oe(`#${a}`).on("click",function(){Ui(i[0],e,t,n,o,!c)}).on("mouseover",function(){c?r.visualComponents.tooltip.show("Include Mitochondrial Genes"):r.visualComponents.tooltip.show("Exclude Mitochondrial Genes")}).on("mouseout",function(){r.visualComponents.tooltip.hide()})}const u="sortTissues";let s=$("<a/>").attr("id",u).addClass("btn btn-default").appendTo(f);$("<i/>").addClass("fa fa-sort-alpha-down").appendTo(s),oe(`#${u}`).on("click",function(){oe("#"+r.config.panels.top.id).style("display","None"),Vi(r.objects.heatmap.xList.sort(),r,a)}).on("mouseover",function(){r.visualComponents.tooltip.show("Sort Tissues Alphabetically")}).on("mouseout",function(){r.visualComponents.tooltip.hide()});const d="clusterTissues";let l=$("<a/>").attr("id",d).addClass("btn btn-default").appendTo(f);$("<i/>").addClass("fa fa-code-branch").appendTo(l),oe(`#${d}`).on("click",function(){oe("#"+r.config.panels.top.id).style("display","Block"),Vi(r.objects.columnTree.xScale.domain(),r,a)}).on("mouseover",function(){r.visualComponents.tooltip.show("Cluster Tissues")}).on("mouseout",function(){r.visualComponents.tooltip.hide()});const h="expMapDownload";let b=$("<a/>").attr("id",h).addClass("btn btn-default").appendTo(f);$("<i/>").addClass("fa fa-save").appendTo(b),oe(`#${h}`).on("click",function(){xa($($($(`${"#"+r.config.id} svg`))[0]),"heatmap.svg","downloadTempDiv")}).on("mouseover",function(){r.visualComponents.tooltip.show("Download Heatmap")}).on("mouseout",function(){r.visualComponents.tooltip.hide()})}function Vi(e,t,n){let r=void 0;const a=oe(".exp-map-xlabel.query");a.empty()||(r=a.datum());const i=oe("#"+t.config.panels.main.id),o=t.config.panels.main;t.objects.heatmap.redraw(i,e,t.objects.heatmap.yList,o),ce(".exp-map-xlabel").text(e=>void 0===n[e]?e:n[e].tissueName).classed("query",!1),Yi(t,n),void 0!==r&&Ri(r),oe("#boxplot").style("opacity",0),ce(".exp-map-ylabel").classed("clicked",!1),t.data.external={}}return e.renderMayo=function(e,t,n=me()){const r="(((((((((((((((((((Vagina:0.64,Cervix_Ectocervix:0.64):0.25,Cervix_Endocervix:0.89):0.36,Bladder:1.25):0.24,(((Breast_Mammary_Tissue:0.73,Adipose_Visceral_Omentum:0.73):0.07,Adipose_Subcutaneous:0.80):0.39,Lung:1.19):0.30):0.01,Thyroid:1.50):0.15,((Uterus:0.88,Fallopian_Tube:0.88):0.34,Prostate:1.22):0.43):0.14,((Artery_Coronary:1.05,Artery_Aorta:1.05):0.18,Artery_Tibial:1.23):0.55):0.37,((Esophagus_Muscularis:0.37,Esophagus_Gastroesophageal_Junction:0.37):0.81,Colon_Sigmoid:1.19):0.97):0.07,(((Minor_Salivary_Gland:1.44,Esophagus_Mucosa:1.44):0.39,(Skin_Sun_Exposed_Lower_leg:0.54,Skin_Not_Sun_Exposed_Suprapubic:0.54):1.30):0.14,((Small_Intestine_Terminal_Ileum:1.43,Colon_Transverse:1.43):0.16,Stomach:1.60):0.37):0.25):0.36,Ovary:2.59):0.28,Spleen:2.86):0.25,Nerve_Tibial:3.11):0.29,(Testis:2.72,Adrenal_Gland:2.72):0.68):0.10,((((Heart_Left_Ventricle:1.81,Heart_Atrial_Appendage:1.81):0.68,Kidney_Cortex:2.49):0.62,Muscle_Skeletal:3.11):0.20,Pancreas:3.31):0.18):0.22,Pituitary:3.71):0.73,Liver:4.44):0.05,(Cells_Transformed_fibroblasts:3.59,Cells_EBV-transformed_lymphocytes:3.59):0.90):0.64,Whole_Blood:5.14):2.17,((((Brain_Cerebellum_Mayo:0.77,Brain_Cerebellum_AD_Mayo:0.77):1.09,(Brain_Cortex_Mayo:0.65,Brain_Cortex_AD_Mayo:0.65):1.21):0.44,(Brain_Cerebellum:0.92,Brain_Cerebellar_Hemisphere:0.92):1.38):0.85,((((((Brain_Hippocampus:0.58,Brain_Amygdala:0.58):0.36,Brain_Nucleus_accumbens_basal_ganglia:0.94):0.02,(Brain_Putamen_basal_ganglia:0.57,Brain_Caudate_basal_ganglia:0.57):0.39):0.33,(Brain_Substantia_nigra:0.89,Brain_Hypothalamus:0.89):0.39):0.19,((Brain_Cortex:0.78,Brain_Anterior_cingulate_cortex_BA24:0.78):0.23,Brain_Frontal_Cortex_BA9:1.01):0.46):0.69,Brain_Spinal_cord_cervical_c-1:2.17):0.98):4.15);",a=function(e){return{top50Liver:"(((((((MT2A:2.81,MT1X:2.81):1.63,PEBP1:4.44):0.77,(TPT1:3.87,IFITM3:3.87):1.34):0.89,((SERPING1:2.08,IGFBP4:2.08):2.29,C3:4.36):1.75):1.04,APOE:7.15):1.92,(MTATP6P1:3.41,FTL:3.41):5.65):6.96,((((RBP4:5.67,MT1G:5.67):0.22,((TF:5.18,APOC1:5.18):0.43,AGT:5.62):0.28):0.66,((((((ITIH4:3.11,CFB:3.11):0.50,ATF5:3.61):0.55,(SERPINF2:3.20,CYP2E1:3.20):0.97):0.79,SERPINA1:4.96):0.35,SERPINA3:5.30):0.28,SAA1:5.59):0.98):0.99,(((((((HPD:3.31,ALB:3.31):0.26,VTN:3.57):0.20,(((((((((FGB:1.14,FGA:1.14):0.15,CRP:1.29):0.14,FGG:1.43):0.16,((((((SERPINC1:0.64,AHSG:0.64):0.16,APCS:0.80):0.07,APOA2:0.87):0.12,AGXT:0.98):0.35,ORM2:1.33):0.02,(GC:1.06,APOH:1.06):0.29):0.23):0.40,(FGL1:1.20,AMBP:1.20):0.78):0.11,ORM1:2.10):0.23,SAA4:2.33):0.34,APOC3:2.67):0.07,HPX:2.74):1.03):0.28,APOA1:4.04):0.14,(SAA2:3.73,HP:3.73):0.46):0.12,TTR:4.30):0.42,ALDOB:4.73):2.82):8.47);",top50Cerebellum_AD:"((((((((PRNP:2.82,CALM1:2.82):0.74,NDRG2:3.57):0.25,CPE:3.82):0.22,CKB:4.03):1.10,APOE:5.13):0.77,(((ZBTB18:2.45,RN7SK:2.45):1.36,(RN7SL2:1.42,RN7SL1:1.42):2.39):0.40,(ENO2:3.29,ALDOC:3.29):0.92):1.69):2.70,(((((((((HSPA8:1.36,HSP90AA1:1.36):0.08,(EIF4A2:1.23,AES:1.23):0.21):0.72,LDHB:2.16):0.20,ITM2B:2.36):0.09,(PEBP1:1.99,CALM2:1.99):0.45):0.32,MALAT1:2.76):1.47,CLU:4.23):0.25,((((PSAP:1.47,HSP90AB1:1.47):0.35,(((RPS25:0.89,EEF2:0.89):0.41,RPL3:1.30):0.09,(((((RPS27A:0.60,RPL9:0.60):0.08,RPL17:0.68):0.11,RPS13:0.79):0.03,RPL5:0.82):0.16,(RPL24:0.43,RPL21:0.43):0.55):0.42):0.43):0.87,GAPDH:2.69):0.12,((((RPS18:0.62,RPL13A:0.62):0.12,(RPS12:0.59,RPS11:0.59):0.15):0.47,EEF1A1:1.21):1.08,ACTB:2.29):0.52):1.67):1.30,(MTATP6P1:3.49,FTL:3.49):2.29):2.83):5.85,(((((STMN2:2.71,ATP6V1G2:2.71):0.73,SNAP25:3.45):0.28,TUBB4A:3.72):0.41,CDR1:4.13):0.34,(MT3:3.04,GFAP:3.04):1.44):9.97);",top50Cerebellum_gtex:"(((((((ENO2:3.29,ALDOC:3.29):0.84,((PHYHIP:2.68,CA11:2.68):0.58,PRRT2:3.25):0.88):1.10,CPE:5.24):1.69,EEF1A2:6.93):0.47,APOE:7.40):1.12,(((((((TMEM59L:2.32,ATP6V1G2:2.32):0.67,STMN2:2.99):0.36,SNAP25:3.35):0.43,TUBB4A:3.78):0.67,((LINC00599:1.89,GABRD:1.89):1.53,SNCB:3.41):1.03):0.87,GFAP:5.31):1.45,((PVALB:3.57,CBLN1:3.57):1.27,CBLN3:4.84):1.92):1.76):5.74,(((MTATP6P1:3.49,FTL:3.49):1.08,((((PSAP:1.47,HSP90AB1:1.47):0.45,(((RPS25:0.89,EEF2:0.89):0.40,((RPS27A:0.60,RPL9:0.60):0.08,RPL17:0.68):0.60):0.03,RPL3:1.32):0.61):0.70,GAPDH:2.62):0.13,((((RPS18:0.62,RPL13A:0.62):0.12,(RPS12:0.59,RPS11:0.59):0.15):0.47,EEF1A1:1.21):1.08,ACTB:2.29):0.46):1.82):0.83,((CLU:4.08,CKB:4.08):0.29,((((SNRNP70:1.90,PTMS:1.90):0.42,(((EIF4A2:1.23,AES:1.23):0.22,HSPA8:1.45):0.35,ATP5B:1.80):0.52):0.61,(CALM3:1.68,CALM1:1.68):1.26):0.14,((PEBP1:1.99,CALM2:1.99):0.31,MTND2P28:2.30):0.78):1.28):1.03):8.86);"}[e]}("top50Cerebellum_AD");Promise.all([p(n.tissue),h(n.mayoGeneExp)]).then(function(i){const o=ve(i[0]),c=function(e,t=!0){return e.forEach(function(e){e.value=t?Math.log10(+e.medianTPM+1):+e.medianTPM,e.x=e.tissueId,e.y=e.geneSymbol,e.originalValue=parseFloat(e.medianTPM),e.id=e.gencodeId}),e}(i[1],!0),f=new Bi(r,a,c);f.render(e);const u=o.reduce((e,t)=>{if(!t.hasOwnProperty("tissueId"))throw"tissue has no attr tissue_id";return e[t.tissueId]=t,e},{}),s=f.data.heatmap.reduce((e,t,n)=>{if(!t.hasOwnProperty("gencodeId"))throw"gene has no attr gencodeId";return e[t.gencodeId]=t,e},{});Oi(f,u,s),Yi(f,u),ji(f,u,s),Gi(e,t,void 0,f,u,[],n),$("#spinner").hide()}).catch(function(e){throw e})},e.reset=Fi,e.createDatasetMenu=function(e,t=me()){p(t.tissue).then(function(t){let n=ve(t);n.forEach(e=>{e.id=e.tissueId,e.text=e.tissueName}),n.sort((e,t)=>e.tissueName<t.tissueName?-1:e.tissueName>t.tissueName?1:0),$(`#${e}`).select2({placeholder:"Select a data set",data:n})}).catch(function(e){console.error(e)})},e.renderTopExpressed=Ui,e.searchById=Hi,e}({});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
